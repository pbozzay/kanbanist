{"version":3,"sources":["pages/kanbanist.png","todoist-client/Todoist.js","core/List.js","core/Item.js","core/Project.js","core/Priority.js","redux/modules/lists.js","components/FilterMenu.js","components/DueDateFilterMenu.js","components/Toolbar.js","components/NewListInput.js","components/ListTitle.js","core/DueDate.js","components/ListItemDueDate.js","components/ListItem.js","components/NewListItemInput.js","components/Toaster.js","components/List.js","components/DraggableList.jsx","redux/modules/user.js","components/LoginDialog.js","containers/ListsPanel.js","redux/middleware/trelloist-filter-url.js","components/Board.js","redux/modules/ui.js","containers/Header.js","containers/Footer.js","pages/Issues.js","pages/Home.js","pages/Demo.js","pages/Donate.js","App.js","Root.js","redux/localStoragePersistence.js","redux/middleware/todoist-persistence.js","redux/configureStore.js","index.js"],"names":["module","exports","SYNC_API_URL","Todoist","apiToken","length","console","warn","fetch","then","res","status","json","Promise","resolve","error","catch","err","todoistData","labels","sort","l1","l2","item_order","forEach","label","name","replaceAll","trim","id","filter","is_deleted","items","map","i","labelId","some","l","projects","p1","p2","collaborators","updatedItem","sendCommand","createCommand","newItem","temp_id","itemText","params","URLSearchParams","token","text","url","toString","newLabel","labelOrdering","id_order_mapping","newLabelName","itemId","completeListItems","itemsIds","commands","push","force_history","sendCommands","type","args","undefined","uuid","window","generateUUID","command","reject","JSON","stringify","resp","r","data","log","getAvatarUrl","image_id","size","List","item","this","findIndex","title","insert","index","el","set","indexOf","sortFn","Record","ImmutableList","of","Item","project","due","priority","parent_id","responsible_uid","date_added","date_string","due_date_utc","date","recurring","is_recurring","color","shared","indent","Priority","key","defaultPriority","priorities","moment","require","isBacklogListId","listId","isListBacklog","list","isInboxProject","SORT_BY","USER_SET","DATE_ADDED","DUE_DATE","PRIORITY","PROJECT_ORDER","SORT_BY_DIRECTION","ASC","DESC","HIDDEN_REASON","NAMED_FILTERS","NEXT_7_DAYS","TODAY","NO_DUE_DATE","initialState","lists","filteredLists","backlog","defaultProjectId","filteredProjects","filterDueDate","Map","startDate","endDate","filteredPriorities","showIfResponsible","showSubtasks","namedFilter","fetching","fetchFail","sortBy","field","direction","types","actions","addList","newList","payload","renameList","newListName","completeList","deleteList","addListItem","onHidden","updateListItem","fields","updateId","old_id","new_id","completeListItem","fetchLists","dispatch","getState","state","fetchRequest","user","response","fetchSuccess","Raven","captureException","fetchFailure","message","labelList","clearAll","updateListsFilter","updateProjectsFilter","updateDueDateFilter","updatePriorityFilter","toggleAssigneeFilter","toggleSubtaskFilter","setNamedFilter","clearFilters","setDefaultProject","projectId","setSortBy","moveItem","fromListId","toListId","itemIndex","updateListIndex","newIndex","action","titleAlreadyUsed","contains","updatedLists","itemList","removedList","find","setItems","concat","content","inboxProject","get","p","Date","newListItem","append","updateItem","updateWith","updatedBacklog","removeItem","reduce","listAndItem","updateItemId","newLists","updateListId","Set","subtract","toList","acc","Object","keys","f","projectIdMap","mapping","Project","weekDays","add","loadedLists","toISOString","isSame","format","project_id","checked","filteredListIds","has","backlogList","intersect","loadedProjects","pid","filteredProjectsIds","sortLists","prevState","sortByField","sortByDirection","a","b","aIndex","bIndex","aDateCreated","bDateCreated","comp","isBefore","isAscending","Math","sign","ret","prevList","reducer","FilterMenu","handleCheckbox","checkboxItem","event","target","value","props","onChange","handleAllCheckbox","onChangeAll","checkboxItems","selectedItems","labelProperty","allSelected","isEmpty","className","style","fontWeight","marginLeft","React","Component","defaultProps","isChecked","DueDateFilterMenu","handleDateChange","dateArray","startMoment","startOf","endMoment","endOf","handleNamedFilter","debug","startDateMoment","endDateMoment","toDate","small","onClick","active","shortcuts","mapDispatchToProps","listActions","connect","Toolbar","onClearFilters","position","PopoverPosition","BOTTOM_RIGHT","icon","newFilteredLists","descendants","getDescendents","rootProject","children","child","newFilteredProjects","newFilteredPriorities","intent","Intent","DANGER","toArray","itemRenderer","handleClick","modifiers","matchesPredicate","disabled","onItemSelect","filterable","rightIcon","k","isActive","Classes","ACTIVE","listsActions","NewListInput","handleAdd","isPremium","is_premium","setState","document","getElementById","scrollIntoView","scroll","handleIfEnter","e","isFocused","addButton","MINIMAL","SUCCESS","usePortal","isOpen","rel","href","placeholder","onKeyPress","rightElement","onFocus","onBlur","setTimeout","ListTitle","handleRename","onRename","isEditing","prevProps","showListMenu","onDelete","onCompleteAll","listMenu","menuButton","Position","RIGHT","newValue","onConfirm","onCancel","DueDate","due_moment","has_time","dateFormat","year","dueDateTimeFormat","parseDueDate","dateTimeStr","hours","minutes","seconds","milliseconds","test","DISPLAY_TYPE","ListItemDueDate","handleToggleDisplayType","displayType","dueDate","fromNow","classes","isExpired","join","outlookRegex","isOutlookText","rawText","ListItem","formatOutlookLink","todoistToMd","replace","markdown","toHTML","_","num","repeat","getOutlookContent","match","updateOutlookItem","beggining","split","handleChange","updatedText","isOutlook","newRawText","handleCheck","onComplete","handleOnEdit","handleCancel","formattedText","previousRawText","onUpdate","setDueDate","applyLinkFixes","$","attr","on","stopPropagation","collaborator","instanceList","isRecurring","opacity","draggableId","provided","snapshot","ref","innerRef","draggableProps","dragHandleProps","classNames","isDragging","multiline","dangerouslySetInnerHTML","__html","iconSize","minimal","BOTTOM","clearButtonText","highlightCurrentDay","isUserChange","showActionsBar","minDate","maxDate","alt","full_name","width","height","src","data-tip","NewListItemInput","handleBlur","newCommentText","onAdd","minLines","BoardToaster","Toaster","create","scrollToBottom","listItemsRef","current","scrollTop","scrollHeight","addItem","max","handleNewItemIsHidden","reason","show","WARNING","timeout","newName","onListRename","handleCompleteAll","onListCompleteAll","allChecked","handleDelete","onListDelete","createRef","canEditTitle","droppableId","isDraggingOver","idx","hashCode","onListItemUpdate","onListItemComplete","c","overflowAnchor","flow","DraggableList","dynamicStyle","loggedIn","login","logout","LoginDialog","handleLogin","loading","getUser","apiTokenField","loginIntent","isValidToken","PRIMARY","autoFocus","canEscapeKeyClose","canOutsideClickClose","enforceFocus","isCloseButtonShown","leftIcon","to","userActions","DRAGGABLE_TYPES","ListsPanel","onDragEnd","result","source","destination","rawDraggableId","intervalId","setInterval","clearInterval","showBacklog","listToRender","generateQueryString","queryParams","visibleLists","visibleProjects","visiblePriorities","filterStartDate","filterEndDate","valueOf","trelloistFilterUrl","store","next","router","willShowIfResponsible","queryString","location","pathname","Board","history","search","decodeURI","showToolbar","containerWidth","shouldShowToolbar","toolbar","toggleBacklog","ui","visual","description","textAlign","filteredProjectIds","filterStartMoment","filterEndMoment","dueDateFilterIsSet","filterFn","isAfter","clone","fullyFilteredLists","filteredBacklog","toggleToolbar","restoreInitialState","Header","logoutButton","backlogButton","syncButton","loginButton","toggleToolbarButton","atBoard","showBoardButtons","boardButton","Group","align","Alignment","LEFT","Heading","Divider","withRouter","uiActions","Footer","process","REACT_APP_VERSION","kanbanistImg","lineHeight","listStyle","role","aria-label","margin","frameBorder","allowFullScreen","method","ReactGA","initialize","titleCase","FocusStyleManager","onlyShowFocusOnTabs","App","handleLocationChange","page","pageview","unsubscribeFromHistory","listen","exact","path","component","Home","Issues","Demo","Donate","Root","load","loadedState","localStorage","jsState","parse","localVersion","clear","Immutable","listObject","listItems","itemObj","backlogItems","Priorities","param","results","RegExp","exec","decodeURIComponent","getParameterByName","start","end","assigned","todoistPersistenceMiddleware","defaultProject","labelString","toLowerCase","projectString","quickAddItem","persistAddListItem","itemIds","persistCompleteList","deleteLabel","persistCompleteListItem","update","persistContentChange","addLabel","temp_id_mapping","persistAddLabel","updateLabelName","persistLabelRename","fromList","includes","toSet","daysFromNow","diff","string","labelOrderMap","lid","assign","updateLabelOrder","emptyMiddleware","sentryMiddleware","setUserContext","userId","userTz","tz_info","timezone","premium","configureStore","createBrowserHistory","combineReducers","connectRouter","logger","middleware","applyMiddleware","save","namespace","thunk","routerMiddleware","trelloistFilterUrlMiddleware","ex","createStore","bindActionCreators","String","prototype","len","hash","charCodeAt","escapeRegExp","str","replacement","d","getTime","performance","now","random","floor","config","release","install","ReactDOM","render"],"mappings":"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","file":"static/js/main.7f8976e6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/kanbanist.94fc37cd.png\";","import fetch from 'isomorphic-fetch';\r\nimport URLSearchParams from 'url-search-params';\r\n\r\n/**\r\n * A (partial) todoist client for javascript.\r\n */\r\n\r\nconst SYNC_API_URL = 'https://api.todoist.com/sync/v8/sync';\r\nconst QUICK_ADD_API_URL = 'https://api.todoist.com/sync/v8/quick/add';\r\n\r\nexport default class Todoist {\r\n    static getUser(apiToken) {\r\n        if (apiToken.length < 40) {\r\n            console.warn(`API Token: '${apiToken}' looks too short...`);\r\n        }\r\n\r\n        return fetch(`${SYNC_API_URL}?token=${apiToken}&resource_types=[\"user\"]`)\r\n            .then(res => {\r\n                if (res.status === 200) {\r\n                    return res.json();\r\n                } else {\r\n                    console.warn('response was not HTTP/200 when checking API token. response:', res);\r\n                    return Promise.resolve({ error: 'could not get user' });\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.error('error getting user:', err);\r\n            });\r\n    }\r\n\r\n    static getAvatarUrl = (image_id, size = 'medium') => {\r\n        return `https://dcff1xvirvpfp.cloudfront.net/${image_id}_${size}.jpg`;\r\n    };\r\n\r\n    static fetch(apiToken) {\r\n        return fetch(\r\n            `${SYNC_API_URL}?token=${apiToken}&sync_token=*&resource_types=[\"labels\",\"items\",\"projects\",\"collaborators\"]`\r\n        )\r\n            .then(res => res.json())\r\n            .then(todoistData => {\r\n                // Labels\r\n                let labels = todoistData['labels'];\r\n                labels.sort((l1, l2) => l1.item_order - l2.item_order);\r\n                labels.forEach(label => {\r\n                    label.name = label.name.replaceAll('_', ' ').trim();\r\n                    label.id = `${label.id}`; // convert to string for react-beautiful-dnd\r\n                });\r\n\r\n                labels = labels.filter(label => label.is_deleted === 0);\r\n\r\n                // Items - convert ids to strings for react-beautiful-dnd\r\n                const items = todoistData['items']\r\n                    .map(i => ({\r\n                        ...i,\r\n                        id: `${i.id}`,\r\n                        labels: i.labels\r\n                            .map(labelId => `${labelId}`)\r\n                            // remove deleted labels\r\n                            .filter(labelId => labels.some(l => l.id === labelId))\r\n                    }));\r\n\r\n                // Projects\r\n                const projects = todoistData['projects'];\r\n                projects.sort((p1, p2) => p1.item_order - p2.item_order);\r\n\r\n                // Collaborators\r\n                const collaborators = todoistData['collaborators'];\r\n\r\n                return { labels, items, projects, collaborators };\r\n            });\r\n    }\r\n\r\n    static updateItem(apiToken, updatedItem) {\r\n        return Todoist.sendCommand(apiToken, Todoist.createCommand('item_update', updatedItem));\r\n    }\r\n\r\n    static addItem(apiToken, newItem, temp_id) {\r\n        return Todoist.sendCommand(apiToken, Todoist.createCommand('item_add', newItem, temp_id));\r\n    }\r\n\r\n    static quickAddItem(apiToken, itemText) {\r\n        const params = new URLSearchParams({\r\n            token: apiToken,\r\n            text: itemText,\r\n        });\r\n        const url = `${QUICK_ADD_API_URL}?${params.toString()}`;\r\n        return fetch(url).then(res => res.json());\r\n    }\r\n\r\n    static addLabel(apiToken, newLabel, temp_id) {\r\n        return Todoist.sendCommand(apiToken, Todoist.createCommand('label_add', newLabel, temp_id));\r\n    }\r\n\r\n    static updateLabelOrder(apiToken, labelOrdering) {\r\n        return Todoist.sendCommand(\r\n            apiToken,\r\n            Todoist.createCommand('label_update_orders', { id_order_mapping: labelOrdering })\r\n        );\r\n    }\r\n\r\n    static updateLabelName(apiToken, labelId, newLabelName) {\r\n        return Todoist.sendCommand(\r\n            apiToken,\r\n            Todoist.createCommand('label_update', { id: labelId, name: newLabelName })\r\n        );\r\n    }\r\n\r\n    static deleteLabel(apiToken, labelId) {\r\n        return Todoist.sendCommand(apiToken, Todoist.createCommand('label_delete', { id: labelId }));\r\n    }\r\n\r\n    static completeListItem(apiToken, itemId) {\r\n        return Todoist.completeListItems(apiToken, [itemId]);\r\n    }\r\n\r\n    static completeListItems(apiToken, itemsIds) {\r\n        const commands = [];\r\n        itemsIds.forEach(id => commands.push(Todoist.createCommand('item_close', { id, force_history: 0 })));\r\n        return Todoist.sendCommands(apiToken, commands);\r\n    }\r\n\r\n    static createCommand(type, args, temp_id = undefined) {\r\n        // Note: a value of `undefined` is ignored by JSON.stringify\r\n        return {\r\n            type: type,\r\n            uuid: window.generateUUID(),\r\n            args: args,\r\n            temp_id: temp_id,\r\n        };\r\n    }\r\n\r\n    static sendCommand(apiToken, command) {\r\n        return Todoist.sendCommands(apiToken, [command]);\r\n    }\r\n\r\n    static sendCommands(apiToken, commands = []) {\r\n        if (commands.length <= 0) {\r\n            console.warn('No commands provided, nothing to send. ', { commands });\r\n            return new Promise((resolve, reject) => {\r\n                reject({ error: 'NO_COMMANDS_PROVIDED' });\r\n            });\r\n        }\r\n        const url = `${SYNC_API_URL}?token=${apiToken}&commands=${JSON.stringify(commands)}`;\r\n        return fetch(url)\r\n            .then(resp => { \r\n                var r = resp.json(); \r\n                r.then(function(data) {\r\n                    console.log(data);\r\n                });\r\n\r\n                return r;\r\n            })\r\n            .catch(err => console.error('Error sending commands: ', err));\r\n    }\r\n}\r\n","import { Record, List as ImmutableList } from 'immutable';\r\n\r\nconst ListRecord = Record({\r\n    id: 0,\r\n    title: '',\r\n    items: ImmutableList.of(),\r\n});\r\n\r\nexport default class List extends ListRecord {\r\n    append(item) {\r\n        if (this.items.findIndex(i => i.id === item.id) >= 0) return this;\r\n        return new List({ id: this.id, title: this.title, items: this.items.push(item) });\r\n    }\r\n\r\n    prepend(item) {\r\n        return new List({ id: this.id, title: this.title, items: this.items.insert(0, item) });\r\n    }\r\n\r\n    insert(index, item) {\r\n        return new List({ id: this.id, title: this.title, items: this.items.insert(index, item) })\r\n    }\r\n\r\n    updateWith({ id, title, items }) {\r\n        return new List({\r\n            id: id || this.id,\r\n            title: title || this.title,\r\n            items: items || this.items,\r\n        });\r\n    }\r\n\r\n    updateItem(item, newItem) {\r\n        const index = this.items.findIndex(el => el.id === item.id);\r\n        if (index < 0) {\r\n            return this;\r\n        }\r\n        const { id, title } = this;\r\n        return new List({ id, title, items: this.items.set(index, newItem) });\r\n    }\r\n\r\n    removeItem(item) {\r\n        // Don't create a new List if item being removed is not in List.\r\n        if (this.items.map(i => i.id).indexOf(item.id) < 0) return this;\r\n        return new List({ id: this.id, title: this.title, items: this.items.filter(el => el.id !== item.id) });\r\n    }\r\n\r\n    setItems(items) {\r\n        return new List({ id: this.id, title: this.title, items });\r\n    }\r\n\r\n    sort(sortFn) {\r\n        return new List({ id: this.id, title: this.title, items: this.items.sort(sortFn) });\r\n    }\r\n}\r\n","import { Record } from 'immutable';\r\n\r\nconst ItemRecord = Record({\r\n    id: 0,\r\n    text: '',\r\n    item_order: 0,\r\n    project: 0,\r\n    due_date_utc: '',\r\n    recurring: false,\r\n    priority: 0,\r\n    parent_id: null,\r\n    responsible_uid: null,\r\n    date_added: '',\r\n    date_string: '',\r\n});\r\n\r\nexport default class Item extends ItemRecord {\r\n    updateWith({ id, text, item_order, project, due, priority, parent_id, responsible_uid, date_added, date_string }) {\r\n        return new Item({\r\n            id: id || this.id,\r\n            text: text || this.text,\r\n            item_order: item_order || this.item_order,\r\n            project: project || this.project,\r\n            due_date_utc: due ? due.date : this.due_date_utc,\r\n            recurring: (due && due.is_recurring) || this.recurring,\r\n            priority: priority || this.priority,\r\n            parent_id: parent_id || this.parent_id,\r\n            responsible_uid: responsible_uid || this.responsible_uid,\r\n            date_added: date_added || this.date_added,\r\n            date_string: date_string || this.date_string,\r\n        });\r\n    }\r\n}\r\n","import { Record } from 'immutable';\r\n\r\nexport default Record({\r\n    id: 0,\r\n    name: '',\r\n    color: 0,\r\n    shared: false,\r\n    item_order: 0,\r\n    indent: 0,\r\n    parent_id: 0,\r\n});\r\n\r\n/**\r\n * Returns an array of all nested projects (including the provided root project)\r\n * @param rootProject the root project to find all \r\n * @param projects all rpojects\r\n */\r\nexport const getDescendents = (rootProject, projects) => {\r\n    const children = projects.filter(p => p.parent_id === rootProject.id);\r\n    return children.length === 0\r\n        ? [ rootProject ]\r\n        : [ rootProject ].concat(...children.map(child => getDescendents(child, projects)))\r\n}\r\n","import { List as ImmutableList, Record } from 'immutable';\r\n\r\nconst Priority = Record({ id: '', key: '', name: '' });\r\n\r\nexport const defaultPriority = new Priority({ id: 'none', key: 1, name: 'No Priority' });\r\nexport const priorities = new ImmutableList([\r\n    new Priority({ id: 'p1', key: 4, name: 'Priority 1' }),\r\n    new Priority({ id: 'p2', key: 3, name: 'Priority 2' }),\r\n    new Priority({ id: 'p3', key: 2, name: 'Priority 3' }),\r\n    defaultPriority,\r\n]);\r\n","import { Map, Set, List as ImmutableList } from 'immutable';\r\nimport Raven from 'raven-js';\r\nimport Todoist from '../../todoist-client/Todoist';\r\n\r\nimport List from '../../core/List';\r\nimport Item from '../../core/Item';\r\nimport Project from '../../core/Project';\r\nimport { defaultPriority } from '../../core/Priority';\r\n\r\nconst moment = require('moment');\r\n\r\nexport const isBacklogListId = listId => listId === \"0\";\r\n\r\nexport const isListBacklog = list => isBacklogListId(list.id);\r\n\r\nexport const isInboxProject = project => {\r\n    return project.name === 'Inbox';\r\n};\r\n\r\nexport const SORT_BY = {\r\n    USER_SET: 'Board',\r\n    DATE_ADDED: 'Date Added',\r\n    DUE_DATE: 'Due Date',\r\n    PRIORITY: 'Priority',\r\n    PROJECT_ORDER: 'Project Order',\r\n};\r\n\r\nexport const SORT_BY_DIRECTION = {\r\n    ASC: 'ASC',\r\n    DESC: 'DESC',\r\n};\r\n\r\nexport const HIDDEN_REASON = {\r\n    PROJECT_FILTERED: 'Warning: you are creating items for a filtered project.',\r\n    DUE_DATE_FILTERED: 'Warning: you are creating items while a Due Date filter is active.',\r\n    PRIORITY_FILTERED: 'Warning: you are creating items with a filtered priority.',\r\n};\r\n\r\nexport const NAMED_FILTERS = {\r\n    NEXT_7_DAYS: 'NEXT_7_DAYS',\r\n    TODAY: 'TODAY',\r\n    NO_DUE_DATE: 'NO_DUE_DATE',\r\n};\r\n\r\nconst initialState = {\r\n    lists: ImmutableList.of(),\r\n    filteredLists: ImmutableList.of(),\r\n    backlog: new List({ id: 0, title: 'Backlog' }),\r\n    projects: ImmutableList.of(),\r\n    defaultProjectId: undefined,\r\n    filteredProjects: ImmutableList.of(),\r\n    filterDueDate: Map({ startDate: null, endDate: null }),\r\n    filteredPriorities: ImmutableList.of(),\r\n    showIfResponsible: false,\r\n    showSubtasks: true,\r\n    namedFilter: null,\r\n    fetching: false,\r\n    fetchFail: null,\r\n    sortBy: Map({ field: SORT_BY.USER_SET, direction: SORT_BY_DIRECTION.ASC }),\r\n    collaborators: [],\r\n};\r\n\r\nexport const types = {\r\n    ADD_NEW_LIST: 'ADD_NEW_LIST',\r\n    RENAME_LIST: 'RENAME_LIST',\r\n    COMPLETE_LIST: 'COMPLETE_LIST',\r\n    DELETE_LIST: 'DELETE_LIST',\r\n    ADD_LIST_ITEM: 'ADD_LIST_ITEM',\r\n    UPDATE_LIST_ITEM: 'UPDATE_LIST_ITEM',\r\n    COMPLETE_LIST_ITEM: 'COMPLETE_LIST_ITEM',\r\n    UPDATE_ID: 'UPDATE_ID',\r\n    FETCH_LISTS: 'FETCH_LISTS',\r\n    FETCH_REQUEST_SENT: 'FETCH_REQUEST_SENT',\r\n    FETCH_SUCCESSFUL: 'FETCH_SUCCESSFUL',\r\n    FETCH_FAILURE: 'FETCH_FAILURE',\r\n    CLEAR_ALL: 'CLEAR_ALL',\r\n    UPDATE_LISTS_FILTER: 'UPDATE_LISTS_FILTER',\r\n    UPDATE_PROJECTS_FILTER: 'UPDATE_PROJECTS_FILTER',\r\n    UPDATE_DUE_DATE_FILTER: 'UPDATE_DUE_DATE_FILTER',\r\n    UPDATE_PRIORITY_FILTER: 'UPDATE_PRIORITY_FILTER',\r\n    TOGGLE_ASSIGNEE_FILTER: 'TOGGLE_ASSIGNEE_FILTER',\r\n    TOGGLE_SUBTASK_FILTER: 'TOGGLE_SUBTASK_FILTER',\r\n    SET_NAMED_FILTER: 'SET_NAMED_FILTER',\r\n    CLEAR_FILTERS: 'CLEAR_FILTERS',\r\n    SET_DEFAULT_PROJECT: 'SET_DEFAULT_PROJECT',\r\n    SET_SORT_BY: 'SET_SORT_BY',\r\n\r\n    // TODO: changing item dragging API with new action\r\n    MOVE_ITEM: 'MOVE_ITEM',\r\n    UPDATE_LIST_INDEX: 'UPDATE_LIST_INDEX',\r\n};\r\n\r\nexport const actions = {\r\n    addList: newList => ({ type: types.ADD_NEW_LIST, payload: newList }),\r\n    renameList: (list, newListName) => ({ type: types.RENAME_LIST, payload: { list, newListName } }),\r\n    completeList: list => ({ type: types.COMPLETE_LIST, payload: { list } }),\r\n    deleteList: list => ({ type: types.DELETE_LIST, payload: { list } }),\r\n    addListItem: (list, item, onHidden) => ({ type: types.ADD_LIST_ITEM, payload: { list, item, onHidden } }),\r\n    updateListItem: (item, fields) => ({ type: types.UPDATE_LIST_ITEM, payload: { item, fields } }),\r\n    updateId: (type, old_id, new_id) => ({ type: types.UPDATE_ID, payload: { type, old_id, new_id }}),\r\n    completeListItem: item => ({ type: types.COMPLETE_LIST_ITEM, payload: { item } }),\r\n    fetchLists: () => (dispatch, getState) => {\r\n        const state = getState();\r\n        dispatch(actions.fetchRequest());\r\n        Todoist.fetch(state.user.user.token)\r\n            .then(response => {\r\n                const { labels, items, projects, collaborators } = response;\r\n                dispatch(actions.fetchSuccess(labels, items, projects, collaborators));\r\n            })\r\n            .catch(err => {\r\n                Raven.captureException(err);\r\n                console.error('Could not fetch Todoist tasks: ', err);\r\n                dispatch(actions.fetchFailure(err.message || 'Could not fetch Todoist tasks'));\r\n            });\r\n    },\r\n    fetchRequest: () => ({ type: types.FETCH_REQUEST_SENT }),\r\n    fetchSuccess: (labelList, items, projects, collaborators) => ({\r\n        type: types.FETCH_SUCCESSFUL,\r\n        payload: { labelList, items, projects, collaborators },\r\n    }),\r\n    fetchFailure: error => ({ type: types.FETCH_FAILURE, payload: { error } }),\r\n    clearAll: () => ({ type: types.CLEAR_ALL }),\r\n    updateListsFilter: filteredLists => ({ type: types.UPDATE_LISTS_FILTER, payload: { filteredLists } }),\r\n    updateProjectsFilter: filteredProjects => ({ type: types.UPDATE_PROJECTS_FILTER, payload: { filteredProjects } }),\r\n    updateDueDateFilter: (startDate, endDate) => ({\r\n        type: types.UPDATE_DUE_DATE_FILTER,\r\n        payload: { startDate, endDate },\r\n    }),\r\n    updatePriorityFilter: filteredPriorities => ({\r\n        type: types.UPDATE_PRIORITY_FILTER,\r\n        payload: { filteredPriorities },\r\n    }),\r\n    toggleAssigneeFilter: () => ({ type: types.TOGGLE_ASSIGNEE_FILTER }),\r\n    toggleSubtaskFilter: () => ({ type: types.TOGGLE_SUBTASK_FILTER }),\r\n    setNamedFilter: namedFilter => ({ type: types.SET_NAMED_FILTER, payload: { namedFilter } }),\r\n    clearFilters: () => ({ type: types.CLEAR_FILTERS }),\r\n    setDefaultProject: projectId => ({ type: types.SET_DEFAULT_PROJECT, payload: { projectId } }),\r\n    setSortBy: (field, direction) => ({ type: types.SET_SORT_BY, payload: { field, direction } }),\r\n    moveItem: (itemId, fromListId, toListId, itemIndex) => ({\r\n        type: types.MOVE_ITEM,\r\n        payload: { itemId, fromListId, toListId, itemIndex }\r\n    }),\r\n    updateListIndex: (listId, newIndex) => ({\r\n        type: types.UPDATE_LIST_INDEX,\r\n        payload: { listId, newIndex }\r\n    }),\r\n};\r\n\r\nfunction addList(state, action) {\r\n    const { name, temp_id } = action.payload;\r\n\r\n    // prevent multiple lists from having the same name\r\n    let title = name;\r\n    let titleAlreadyUsed = state.lists.map(list => list.title).contains(title);\r\n    while (titleAlreadyUsed) {\r\n        title = title + ' 2';\r\n        titleAlreadyUsed = state.lists.map(list => list.title).contains(title);\r\n    }\r\n\r\n    const newList = new List({ title, id: temp_id, items: ImmutableList.of() });\r\n    return { ...state, lists: state.lists.push(newList) };\r\n}\r\n\r\nfunction renameList(state, action) {\r\n    const { list, newListName } = action.payload;\r\n\r\n    // TODO: de-duplicate from above\r\n    // prevent multiple lists from having the same name\r\n    let title = newListName;\r\n    let titleAlreadyUsed = state.lists.map(list => list.title).contains(title);\r\n    while (titleAlreadyUsed) {\r\n        title = title + ' 2';\r\n        titleAlreadyUsed = state.lists.map(list => list.title).contains(title);\r\n    }\r\n\r\n    const updatedLists = state.lists.map(itemList => {\r\n        if (itemList.id === list.id) {\r\n            const { id, items } = itemList;\r\n            return new List({ id, items, title });\r\n        } else {\r\n            return itemList;\r\n        }\r\n    });\r\n    return { ...state, lists: updatedLists };\r\n}\r\n\r\nfunction deleteList(state, action) {\r\n    const { id } = action.payload.list;\r\n    const removedList = state.lists.find(itemList => itemList.id === id);\r\n    const lists = state.lists.filter(el => el.id !== id);\r\n    const backlog = state.backlog.setItems(state.backlog.items.concat(removedList.items));\r\n    return { ...state, lists, backlog };\r\n}\r\n\r\nfunction completeList(state, action) {\r\n    const { id } = action.payload.list;\r\n    const updatedLists = state.lists.map(itemList => {\r\n        if (itemList.id === id) {\r\n            return itemList.setItems(ImmutableList.of());\r\n        } else {\r\n            return itemList;\r\n        }\r\n    });\r\n    return { ...state, lists: updatedLists };\r\n}\r\n\r\nfunction addListItem(state, action) {\r\n    const { list, item, onHidden } = action.payload;\r\n    const { content, temp_id, item_order } = item;\r\n    const { lists, projects, backlog, defaultProjectId } = state;\r\n\r\n    // if the newly created item will be hidden, we notify the action caller\r\n    const inboxProject = projects.find(isInboxProject);\r\n    const projectId = defaultProjectId ? defaultProjectId : inboxProject.id;\r\n    if (state.filteredProjects.find(project => project.id === projectId)) {\r\n        onHidden(HIDDEN_REASON.PROJECT_FILTERED);\r\n    } else if (state.filterDueDate.get('startDate', false)) {\r\n        // this will if there is any due date filter at all - even if quick-add is about to add a due date that means\r\n        // the item IS visible\r\n        onHidden(HIDDEN_REASON.DUE_DATE_FILTERED);\r\n    } else if (state.filteredPriorities.map(p => p.id).contains(defaultPriority.id)) {\r\n        // same as above, this will fire even if quick-add syntax will mean a priority will be set that means the item\r\n        // IS visible\r\n        onHidden(HIDDEN_REASON.PRIORITY_FILTERED);\r\n    }\r\n\r\n    const project = projects.find(p => p.id === defaultProjectId, null, projects.find(isInboxProject));\r\n    const date_added = new Date();\r\n    const newListItem = new Item({ text: content, id: temp_id, item_order, project, date_added });\r\n\r\n    if (isListBacklog(list)) {\r\n        return { ...state, backlog: backlog.append(newListItem) };\r\n    }\r\n\r\n    const updatedLists = lists.map(itemList => (itemList.id === list.id ? itemList.append(newListItem) : itemList));\r\n    return { ...state, lists: updatedLists };\r\n}\r\n\r\nfunction updateListItem(state, action) {\r\n    const { item, fields } = action.payload;\r\n    const updatedLists = state.lists.map(itemList => itemList.updateItem(item, item.updateWith(fields)));\r\n    const updatedBacklog = state.backlog.updateItem(item, item.updateWith(fields));\r\n    return { ...state, lists: updatedLists, backlog: updatedBacklog };\r\n}\r\n\r\nfunction completeListItem(state, action) {\r\n    const { item } = action.payload;\r\n    const { backlog, lists } = state;\r\n\r\n    // If completing an item from the backlog\r\n    const completedFromBacklog = backlog.items.contains(item);\r\n    if (completedFromBacklog) {\r\n        return { ...state, backlog: backlog.removeItem(item) };\r\n    }\r\n\r\n    const updatedLists = lists.map(itemList => {\r\n        return itemList.removeItem(item);\r\n    });\r\n    return { ...state, lists: updatedLists };\r\n}\r\n\r\n/**\r\n * Todoist returns the mapping from the `temp_id` (that we provide) to the true id of the label or list item.\r\n * If we waited for the server to return before continuing then there is a notable delay when adding list items\r\n * and lists. So instead we just use the temp id then updateItem the id when todoist returns in a seperate action.\r\n *\r\n * See: todoistPersistenceMiddleware > case types.ADD_LIST_ITEM for an example.\r\n *\r\n */\r\nfunction updateId(state, action) {\r\n    const { type, old_id, new_id } = action.payload;\r\n    switch (type) {\r\n        case Item:\r\n            return updateItemId(state, old_id, new_id);\r\n        case List:\r\n            return updateListId(state, old_id, `${new_id}`);\r\n        default:\r\n            console.error('Updating id for unknown type: ', type);\r\n            return state;\r\n    }\r\n}\r\n\r\nfunction updateItemId(state, old_id, new_id) {\r\n    // Find the item to replace and its containing list\r\n    const { list, item } = state.lists.reduce(\r\n        (listAndItem, itemList) => {\r\n            const item = itemList.items.find(el => el.id === old_id, null);\r\n            if (item) {\r\n                return {\r\n                    list: itemList,\r\n                    item: item,\r\n                };\r\n            } else {\r\n                return listAndItem;\r\n            }\r\n        },\r\n        { list: null, item: null }\r\n    );\r\n\r\n    if (list === null || item === null) {\r\n        console.error('Could not find list or item for id update: ', { old_id, new_id });\r\n        return state;\r\n    }\r\n\r\n    // Update the list and item\r\n    const updatedLists = state.lists.map(itemList => {\r\n        if (itemList.id !== list.id) {\r\n            return itemList;\r\n        } else {\r\n            return itemList.updateItem(item, item.updateWith({ id: new_id }));\r\n        }\r\n    });\r\n    return { ...state, lists: updatedLists };\r\n}\r\n\r\nfunction updateListId(state, old_id, new_id) {\r\n    const newLists = state.lists.map(itemList => {\r\n        if (itemList.id !== old_id) {\r\n            return itemList;\r\n        } else {\r\n            return itemList.updateWith({ id: new_id });\r\n        }\r\n    });\r\n    return { ...state, lists: newLists };\r\n}\r\n\r\nfunction updateListsFilter(state, action) {\r\n    const { filteredLists } = action.payload;\r\n\r\n    const listsRemoved = Set(filteredLists).subtract(Set(state.filteredLists)).toList();\r\n    let backlog = listsRemoved.reduce((backlog, list) => {\r\n        return list.get('items').reduce((acc, item) => acc.append(item), backlog)\r\n    }, state.backlog);\r\n\r\n    const listsAdded = Set(state.filteredLists).subtract(Set(filteredLists)).toList();\r\n    backlog = listsAdded.reduce((backlog, list) => {\r\n        return list.get('items').reduce((acc, item) => acc.removeItem(item), backlog)\r\n    }, backlog);\r\n\r\n    return {\r\n        ...state,\r\n        backlog,\r\n        filteredLists,\r\n    };\r\n}\r\n\r\nfunction updateProjectsFilter(state, action) {\r\n    const { filteredProjects } = action.payload;\r\n    return { ...state, filteredProjects };\r\n}\r\n\r\nfunction updatePriorityFilter(state, action) {\r\n    const { filteredPriorities } = action.payload;\r\n    return { ...state, filteredPriorities };\r\n}\r\n\r\nfunction updateDueDateFilter(state, action) {\r\n    const { startDate, endDate } = action.payload;\r\n    return { ...state, filterDueDate: Map({ startDate, endDate }) };\r\n}\r\n\r\nfunction toggleAssigneeFilter(state, action) {\r\n    return { ...state, showIfResponsible: !state.showIfResponsible };\r\n}\r\n\r\nfunction toggleSubtaskFilter(state, action) {\r\n    return { ...state, showSubtasks: !state.showSubtasks };\r\n}\r\n\r\nfunction setNamedFilter(state, action) {\r\n    const { namedFilter } = action.payload;\r\n    if (Object.keys(NAMED_FILTERS).some(f => f === namedFilter) || namedFilter === null) {\r\n        return { ...state, namedFilter };\r\n    } else {\r\n        console.error('unknown named filter', namedFilter);\r\n        return state;\r\n    }\r\n}\r\n\r\nfunction fetchRequest(state, action) {\r\n    return { ...state, fetching: true };\r\n}\r\n\r\nfunction fetchSuccess(state, action) {\r\n    const { labelList, items, projects, collaborators } = action.payload;\r\n\r\n    const projectIdMap = projects.reduce((mapping, project) => {\r\n        mapping[project.id] = new Project(project);\r\n        return mapping;\r\n    }, {});\r\n\r\n    console.log(labelList);\r\n    // Array containing the days of the week.\r\n    const weekDays = [\r\n        moment().add(0,'days'), //today\r\n        moment().add(1,'days'), //tomorrow\r\n        moment().add(2,'days'),\r\n        moment().add(3,'days'),\r\n        moment().add(4,'days'),\r\n    ];\r\n\r\n    // Create Lists.\r\n    const loadedLists = ImmutableList(\r\n        weekDays.map(date => {\r\n            return new List({\r\n                id: date.toISOString(),\r\n                title: date.isSame(new Date(), 'Day') ? date.format(\"dddd\") + \" (Today)\" : date.format(\"dddd\"),\r\n                items: ImmutableList(\r\n                    items\r\n                        .filter(item => item.due == null ? false : moment(item.due.date).isSame(date, 'day'))\r\n                        .filter(item => {\r\n                            // FIXME: remove items without a valid project (seen in wild, unsure how it happens)\r\n                            const project = projectIdMap[item.project_id];\r\n                            if (!project) {\r\n                                console.warn('item is missing valid project, skipping...');\r\n                                console.warn(JSON.stringify({ projects, item }, null, 2));\r\n                            }\r\n                            return !!project;\r\n                        })\r\n                        .filter(item => !item.checked)\r\n                        .map(item => new Item({\r\n                            ...item,\r\n                            due_date_utc: item.due && item.due.date,\r\n                            recurring: item.due && item.due.is_recurring,\r\n                            text: item.content,\r\n                            project: projectIdMap[item.project_id],\r\n                        }))\r\n\r\n                ),\r\n            });\r\n        })\r\n    );\r\n\r\n    // Create list filters\r\n    const filteredListIds = Set(state.filteredLists.map(el => el.id));\r\n    const filteredLists = loadedLists.filter(el => filteredListIds.has(el.id));\r\n\r\n    // Create backlog.\r\n    // Important Note: when a label is deleted Todoist doesn't remove that label from any tasks that had that label\r\n    //                 but our Todoist client does filter those labels. So rather than just check if labels is empty\r\n    //                 we need to filter our backlog items to items that don't have a label that exists.\r\n    const backlogList = new List({\r\n        id: \"0\",\r\n        title: 'Backlog',\r\n        items: ImmutableList(\r\n            items\r\n                .filter(item => item.labels.length === 0 || Set.of(...item.labels).intersect(filteredListIds).size > 0)\r\n                .filter(item => {\r\n                    // FIXME: remove items without a valid project (seen in wild, unsure how it happens)\r\n                    const project = projectIdMap[item.project_id];\r\n                    if (!project) {\r\n                        console.warn('item in backlog is missing valid project, skipping...');\r\n                        console.warn(JSON.stringify({ projects, item }, null, 2));\r\n                    }\r\n                    return !!project;\r\n                })\r\n                .filter(item => !item.checked)\r\n                .map(item => new Item({\r\n                    ...item,\r\n                    due_date_utc: item.due && item.due.date,\r\n                    recurring: item.due && item.due.is_recurring,\r\n                    text: item.content,\r\n                    project: projectIdMap[item.project_id],\r\n                }))\r\n        ),\r\n    });\r\n\r\n    // Create projects and filtered projects\r\n    const loadedProjects = ImmutableList(Object.keys(projectIdMap).map(pid => projectIdMap[pid]));\r\n    const filteredProjectsIds = state.filteredProjects.map(el => el.id);\r\n    const filteredProjects = loadedProjects.filter(el => filteredProjectsIds.contains(el.id));\r\n\r\n    return {\r\n        ...state,\r\n        projects: loadedProjects,\r\n        filteredProjects,\r\n        lists: loadedLists,\r\n        filteredLists,\r\n        backlog: backlogList,\r\n        fetching: false,\r\n        fetchFail: null,\r\n        collaborators,\r\n    };\r\n}\r\n\r\nfunction fetchFailure(state, action) {\r\n    return { ...state, fetching: false, fetchFail: action.payload.error };\r\n}\r\n\r\nfunction setDefaultProject(state, action) {\r\n    const { projectId } = action.payload;\r\n    return { ...state, defaultProjectId: projectId };\r\n}\r\n\r\nfunction setSortBy(state, action) {\r\n    const { field, direction } = action.payload;\r\n    if (SORT_BY[field] && SORT_BY_DIRECTION[direction]) {\r\n        const sortBy = state.sortBy.set('field', SORT_BY[field]).set('direction', SORT_BY_DIRECTION[direction]);\r\n        return { ...state, sortBy };\r\n    } else {\r\n        console.warn(`unknown sortBy field ${field} or sortBy direction ${direction}`);\r\n        return state;\r\n    }\r\n}\r\n\r\nfunction moveItem(state, action) {\r\n    console.log(\"Updating list item with...\" + action.payload);\r\n    const { itemId, fromListId, toListId, itemIndex } = action.payload;\r\n\r\n    const item = state.lists.push(state.backlog)\r\n        .find(l => l.id === fromListId).get('items')\r\n        .find(i => i.id === itemId);\r\n\r\n    const updatedLists = state.lists.map(l => {\r\n        let newList = l;\r\n\r\n        if (l.id === fromListId) {\r\n            newList = newList.removeItem(item);\r\n        }\r\n\r\n        // don't add an item to a list twice\r\n        if (l.id === toListId && !newList.get('items').some(i => i.id === item.id)) {\r\n            newList = newList.insert(itemIndex, item);\r\n        }\r\n\r\n        return newList;\r\n    });\r\n\r\n    let updatedBacklog = state.backlog;\r\n    if (isBacklogListId(fromListId)) {\r\n        updatedBacklog = updatedBacklog.removeItem(item);\r\n    }\r\n\r\n    if (isBacklogListId(toListId)) {\r\n        updatedBacklog = updatedBacklog.insert(itemIndex, item);\r\n    }\r\n\r\n    return { ...state, lists: updatedLists, backlog: updatedBacklog };\r\n}\r\n\r\nfunction updateListIndex(state, action) {\r\n    const { listId, newIndex } = action.payload;\r\n    const { lists } = state;\r\n    const list = lists.find(l => l.id === listId);\r\n    return {\r\n        ...state,\r\n        lists: lists.filter(el => el.id !== listId).insert(newIndex, list)\r\n    };\r\n}\r\n\r\nfunction sortLists(state, prevState) {\r\n    const { lists, backlog } = state;\r\n    const sortByField = state.sortBy.get('field');\r\n    const sortByDirection = state.sortBy.get('direction');\r\n    let sortFn = (a, b, list) => 0;\r\n    switch (sortByField) {\r\n        case SORT_BY.USER_SET:\r\n            sortFn = (a, b, list) => {\r\n                let aIndex = list ? list.get('items').findIndex(i => i.id === a.id) : 1;\r\n                let bIndex = list ? list.get('items').findIndex(i => i.id === b.id) : 0;\r\n                aIndex = aIndex > -1 ? aIndex : list.get('items').size;\r\n                bIndex = bIndex > -1 ? bIndex : list.get('items').size;\r\n                return aIndex <= bIndex ? -1 : 1;\r\n            };\r\n            break;\r\n        case SORT_BY.DATE_ADDED:\r\n            sortFn = (a, b) => {\r\n                const aDateCreated = moment(a.date_added);\r\n                const bDateCreated = moment(b.date_added);\r\n                const comp = aDateCreated.isSame(bDateCreated) ? 0 : aDateCreated.isBefore(bDateCreated) ? -1 : 1;\r\n                return sortByDirection === SORT_BY_DIRECTION.ASC ? comp : -1 * comp;\r\n            };\r\n            break;\r\n        case SORT_BY.DUE_DATE:\r\n            sortFn = (a, b) => {\r\n                // always push items without a due date to bottom of list and keep stable on direction change\r\n                if (!a.due_date_utc && !b.due_date_utc) {\r\n                    return 0;\r\n                } else if (!a.due_date_utc) {\r\n                    return 1;\r\n                } else if (!b.due_date_utc) {\r\n                    return -1;\r\n                }\r\n                const aDateCreated = moment(a.due_date_utc);\r\n                const bDateCreated = moment(b.due_date_utc);\r\n                const comp = aDateCreated.isSame(bDateCreated) ? 0 : aDateCreated.isBefore(bDateCreated) ? -1 : 1;\r\n                return sortByDirection === SORT_BY_DIRECTION.ASC ? comp : -1 * comp;\r\n            };\r\n            break;\r\n        case SORT_BY.PRIORITY:\r\n            const isAscending = sortByDirection === SORT_BY_DIRECTION.ASC;\r\n            sortFn = (a, b) => (isAscending ? 1 : -1) * Math.sign(b.priority - a.priority);\r\n            break;\r\n        case SORT_BY.PROJECT_ORDER:\r\n            sortFn = (a, b) => {\r\n                let ret = 0;\r\n                // first sort by projects...\r\n                if (a.project.item_order < b.project.item_order) {\r\n                    ret = -1;\r\n                } else if (a.project.item_order > b.project.item_order) {\r\n                    ret = 1;\r\n                    // ...then sort items in project\r\n                } else {\r\n                    ret = Math.sign(a.item_order - b.item_order);\r\n                }\r\n                return (sortByDirection === SORT_BY_DIRECTION.ASC ? 1 : -1) * ret;\r\n            };\r\n            break;\r\n        default:\r\n            console.warn(`unknown sortBy.field: ${sortByField}`);\r\n    }\r\n\r\n    return {\r\n        ...state,\r\n        lists: lists.map(list => {\r\n            const prevList = prevState.lists.find(l => l.id === list.id);\r\n            return list.sort((a,b) => sortFn(a, b, prevList));\r\n        }),\r\n        backlog: backlog.sort((a,b) => sortFn(a, b, backlog))\r\n    };\r\n}\r\n\r\nexport const reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.ADD_NEW_LIST:\r\n            return addList(state, action);\r\n        case types.RENAME_LIST:\r\n            return renameList(state, action);\r\n        case types.DELETE_LIST:\r\n            return deleteList(state, action);\r\n        case types.COMPLETE_LIST:\r\n            return completeList(state, action);\r\n        case types.ADD_LIST_ITEM:\r\n            return sortLists(addListItem(state, action), state);\r\n        case types.UPDATE_LIST_ITEM:\r\n            return updateListItem(state, action);\r\n        case types.UPDATE_ID:\r\n            return sortLists(updateId(state, action), state);\r\n        case types.COMPLETE_LIST_ITEM:\r\n            return completeListItem(state, action);\r\n\r\n        case types.UPDATE_LISTS_FILTER:\r\n            return updateListsFilter(state, action);\r\n        case types.UPDATE_PROJECTS_FILTER:\r\n            return updateProjectsFilter(state, action);\r\n        case types.UPDATE_DUE_DATE_FILTER:\r\n            return updateDueDateFilter(state, action);\r\n        case types.UPDATE_PRIORITY_FILTER:\r\n            return updatePriorityFilter(state, action);\r\n        case types.TOGGLE_ASSIGNEE_FILTER:\r\n            return toggleAssigneeFilter(state, action);\r\n        case types.TOGGLE_SUBTASK_FILTER:\r\n            return toggleSubtaskFilter(state, action);\r\n        case types.SET_NAMED_FILTER:\r\n            return setNamedFilter(state, action);\r\n\r\n        case types.FETCH_REQUEST_SENT:\r\n            return fetchRequest(state, action);\r\n        case types.FETCH_SUCCESSFUL:\r\n            return sortLists(fetchSuccess(state, action), state);\r\n        case types.FETCH_FAILURE:\r\n            return fetchFailure(state, action);\r\n\r\n        case types.CLEAR_FILTERS:\r\n            return {\r\n                ...state,\r\n                filteredProjects: initialState.filteredProjects,\r\n                filteredLists: initialState.filteredLists,\r\n                filterDueDate: initialState.filterDueDate,\r\n                filteredPriorities: initialState.filteredPriorities,\r\n                showIfResponsible: false,\r\n                showSubtasks: true,\r\n                namedFilter: null,\r\n            };\r\n\r\n        case types.CLEAR_ALL:\r\n            return initialState;\r\n\r\n        case types.SET_DEFAULT_PROJECT:\r\n            return setDefaultProject(state, action);\r\n        case types.SET_SORT_BY:\r\n            return sortLists(setSortBy(state, action), state);\r\n\r\n        case types.MOVE_ITEM:\r\n            return moveItem(state, action);\r\n\r\n        case types.UPDATE_LIST_INDEX:\r\n            return updateListIndex(state, action);\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Checkbox } from '@blueprintjs/core';\r\n\r\nexport default class FilterMenu extends React.Component {\r\n    handleCheckbox = (checkboxItem, event) => {\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        this.props.onChange(checkboxItem, value);\r\n    };\r\n\r\n    handleAllCheckbox = event => {\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        this.props.onChangeAll(value);\r\n    };\r\n\r\n    render() {\r\n        const { checkboxItems, selectedItems, labelProperty } = this.props;\r\n\r\n        const allSelected = checkboxItems.filter(el => !selectedItems.contains(el)).isEmpty();\r\n\r\n        return (\r\n            <div className=\"FilterMenu\">\r\n                <div className=\"FilterMenu-checkboxes\">\r\n                    <Checkbox\r\n                        style={{ fontWeight: 'bold' }}\r\n                        key=\"all-checkbox\"\r\n                        checked={allSelected}\r\n                        label=\"All\"\r\n                        onChange={this.handleAllCheckbox}\r\n                    />\r\n                    {checkboxItems.map(item => {\r\n                        return (\r\n                            <Checkbox\r\n                                key={item.id}\r\n                                checked={selectedItems.contains(item)}\r\n                                label={item[labelProperty]}\r\n                                onChange={event => this.handleCheckbox(item, event)}\r\n                                style={{ marginLeft: `${item.indent * 22}px`}}\r\n                            />\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nFilterMenu.propTypes = {\r\n    checkboxItems: PropTypes.any.isRequired,\r\n    selectedItems: PropTypes.any.isRequired,\r\n    title: PropTypes.string,\r\n    labelProperty: PropTypes.string,\r\n    onChange: PropTypes.func,\r\n    onChangeAll: PropTypes.func,\r\n};\r\n\r\nFilterMenu.defaultProps = {\r\n    title: 'Filter Menu',\r\n    labelProperty: 'title',\r\n    onChange: (item, isChecked) => console.log(`item: ${item}, isChecked: ${isChecked}`),\r\n    onChangeAll: isChecked => console.log(`allItems: ${isChecked}`),\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Button } from '@blueprintjs/core';\r\nimport { DateRangePicker } from '@blueprintjs/datetime';\r\nimport '@blueprintjs/datetime/lib/css/blueprint-datetime.css';\r\nimport moment from 'moment';\r\n\r\nimport { actions as listActions, NAMED_FILTERS } from '../redux/modules/lists';\r\n\r\nclass DueDateFilterMenu extends React.Component {\r\n    handleDateChange = dateArray => {\r\n        const { setNamedFilter, updateDueDateFilter } = this.props;\r\n        const [startDate, endDate] = dateArray;\r\n        const startMoment = startDate !== null ? moment(startDate).startOf('day') : null;\r\n        const endMoment = endDate !== null ? moment(endDate).endOf('day') : null;\r\n        setNamedFilter(null);\r\n        updateDueDateFilter(startMoment, endMoment);\r\n    };\r\n\r\n    handleNamedFilter = filter => {\r\n        const { updateDueDateFilter, setNamedFilter } = this.props;\r\n        console.debug('TODO: setNamedFilter', filter);\r\n\r\n        if (filter) {\r\n            // clear existing due date filter\r\n            updateDueDateFilter(null, null);\r\n            setNamedFilter(filter);\r\n        } else {\r\n            // un-set named filter\r\n            setNamedFilter(null);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { filterDueDate, namedFilter } = this.props;\r\n        const startDateMoment = filterDueDate.get('startDate', null);\r\n        const endDateMoment = filterDueDate.get('endDate', null);\r\n        const startDate = startDateMoment !== null ? startDateMoment.toDate() : null;\r\n        const endDate = endDateMoment !== null ? endDateMoment.toDate() : null;\r\n        return (\r\n            <div className=\"DueDateFilterMenu FilterMenu\">\r\n                <p><strong>Dynamic</strong></p>\r\n                <Button\r\n                    small={true}\r\n                    className=\"Toolbar-button\"\r\n                    text=\"Today\"\r\n                    title=\"Dynamic filter - Today\"\r\n                    onClick={() => {\r\n                        if (namedFilter === NAMED_FILTERS.TODAY) {\r\n                            this.handleNamedFilter(null);\r\n                        } else {\r\n                            this.handleNamedFilter(NAMED_FILTERS.TODAY);\r\n                        }\r\n                    }}\r\n                    active={namedFilter === NAMED_FILTERS.TODAY}\r\n                />\r\n                <Button\r\n                    small={true}\r\n                    className=\"Toolbar-button\"\r\n                    text=\"Next 7 Days\"\r\n                    title=\"Dynamic filter - Next 7 days\"\r\n                    onClick={() => {\r\n                        if (namedFilter === NAMED_FILTERS.NEXT_7_DAYS) {\r\n                            this.handleNamedFilter(null);\r\n                        } else {\r\n                            this.handleNamedFilter(NAMED_FILTERS.NEXT_7_DAYS);\r\n                        }\r\n                    }}\r\n                    active={namedFilter === NAMED_FILTERS.NEXT_7_DAYS}\r\n                />\r\n                <Button\r\n                    small={true}\r\n                    className=\"Toolbar-button\"\r\n                    title=\"Dynamic filter - No Due Date\"\r\n                    text=\"No Due Date\"\r\n                    onClick={() => {\r\n                        if (namedFilter === NAMED_FILTERS.NO_DUE_DATE) {\r\n                            this.handleNamedFilter(null);\r\n                        } else {\r\n                            this.handleNamedFilter(NAMED_FILTERS.NO_DUE_DATE);\r\n                        }\r\n                    }}\r\n                    active={namedFilter === NAMED_FILTERS.NO_DUE_DATE}\r\n                />\r\n                <br/>\r\n                <br/>\r\n                <p><strong>Date Range</strong></p>\r\n                <DateRangePicker\r\n                    value={[startDate, endDate]}\r\n                    onChange={this.handleDateChange}\r\n                    shortcuts={false}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    const { filterDueDate, namedFilter } = state.lists;\r\n    return { filterDueDate, namedFilter };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    updateDueDateFilter: listActions.updateDueDateFilter,\r\n    setNamedFilter: listActions.setNamedFilter,\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(DueDateFilterMenu);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Button, AnchorButton, Classes, Intent, MenuItem, Popover } from '@blueprintjs/core';\r\nimport { Select } from '@blueprintjs/select';\r\nimport '@blueprintjs/select/lib/css/blueprint-select.css';\r\nimport { PopoverPosition } from \"@blueprintjs/core/lib/cjs/components/popover/popoverSharedProps\";\r\nimport { actions as listsActions, SORT_BY, SORT_BY_DIRECTION } from '../redux/modules/lists';\r\nimport FilterMenu from './FilterMenu';\r\nimport DueDateFilterMenu from './DueDateFilterMenu';\r\nimport { priorities } from '../core/Priority';\r\nimport { getDescendents } from '../core/Project';\r\n\r\nimport './Toolbar.css';\r\n\r\nclass Toolbar extends Component {\r\n    render() {\r\n        const {\r\n            lists,\r\n            filteredLists,\r\n            updateListsFilter,\r\n            projects,\r\n            filteredProjects,\r\n            updateProjectsFilter,\r\n            showIfResponsible,\r\n            toggleAssigneeFilter,\r\n            showSubtasks,\r\n            toggleSubtaskFilter,\r\n            onClearFilters,\r\n            defaultProjectId,\r\n            setDefaultProject,\r\n            filteredPriorities,\r\n            updatePriorityFilter,\r\n            sortBy,\r\n            setSortBy,\r\n        } = this.props;\r\n\r\n        return (\r\n            <div className=\"Toolbar\">\r\n                <div className=\"inner\">\r\n                    <Popover position={PopoverPosition.BOTTOM_RIGHT} className=\"Toolbar-item\">\r\n                        <AnchorButton text=\"Lists\" icon=\"property\"/>\r\n                        <FilterMenu\r\n                            checkboxItems={lists}\r\n                            selectedItems={lists.filter(el => !filteredLists.contains(el))}\r\n                            onChange={(list, checked) => {\r\n                                const newFilteredLists = checked\r\n                                    ? filteredLists.filter(el => el.id !== list.id)\r\n                                    : filteredLists.push(list);\r\n\r\n                                updateListsFilter(newFilteredLists);\r\n                            }}\r\n                            onChangeAll={checked => updateListsFilter(checked ? filteredLists.filter(el => false) : lists)}\r\n                        />\r\n                    </Popover>\r\n                    <Popover className=\"Toolbar-item\">\r\n                        <AnchorButton text=\"Projects\" icon=\"projects\"/>\r\n                        <FilterMenu\r\n                            checkboxItems={projects.sort((p1, p2) => Math.sign(p1.item_order - p2.item_order))}\r\n                            selectedItems={projects.filter(el => !filteredProjects.contains(el))}\r\n                            labelProperty=\"name\"\r\n                            onChange={(project, checked) => {\r\n                                const descendants = getDescendents(project, projects);\r\n                                const newFilteredProjects = checked\r\n                                    ? filteredProjects.filter(el => !descendants.some(p => p.id === el.id))\r\n                                    : filteredProjects.push(...descendants);\r\n\r\n                                updateProjectsFilter(newFilteredProjects);\r\n                            }}\r\n                            onChangeAll={checked => updateProjectsFilter(checked ? filteredProjects.filter(el => false) : projects)}\r\n                        />\r\n                    </Popover>\r\n                    <Popover className=\"Toolbar-item\">\r\n                        <AnchorButton text=\"Priority\" icon=\"flag\"/>\r\n                        <FilterMenu\r\n                            checkboxItems={priorities}\r\n                            labelProperty=\"name\"\r\n                            selectedItems={priorities.filter(p => !filteredPriorities.contains(p))}\r\n                            onChange={(priority, checked) => {\r\n                                const newFilteredPriorities = checked\r\n                                    ? filteredPriorities.filter(el => el.id !== priority.id)\r\n                                    : filteredPriorities.push(priority);\r\n\r\n                                updatePriorityFilter(newFilteredPriorities);\r\n                            }}\r\n                            onChangeAll={checked => updatePriorityFilter(checked ? priorities.filter(el => false) : priorities)}\r\n                        />\r\n                    </Popover>\r\n                    <Popover className=\"Toolbar-item\">\r\n                        <AnchorButton text=\"Due\" icon=\"calendar\"/>\r\n                        <DueDateFilterMenu />\r\n                    </Popover>\r\n                    <Button\r\n                        className=\"Toolbar-item\"\r\n                        text=\"Assigned to me\"\r\n                        icon=\"user\"\r\n                        active={showIfResponsible}\r\n                        onClick={toggleAssigneeFilter}\r\n                    />\r\n                    <Button\r\n                        className=\"Toolbar-item\"\r\n                        text={`${ showSubtasks ? \"Hide\" : \"Show\" } Sub-tasks`}\r\n                        icon=\"list-detail-view\"\r\n                        active={!showSubtasks}\r\n                        onClick={toggleSubtaskFilter}\r\n                    />\r\n                    <Button\r\n                        className=\"Toolbar-item\"\r\n                        text=\"Clear Filters\"\r\n                        icon=\"remove\"\r\n                        intent={Intent.DANGER}\r\n                        onClick={onClearFilters}\r\n                    />\r\n                    <span className=\"light-divider bp3-navbar-divider\" />\r\n                    <Select\r\n                        className=\"Toolbar-item\"\r\n                        items={projects.toArray()}\r\n                        itemRenderer={(project, { handleClick, modifiers }) => {\r\n                            if (!modifiers.matchesPredicate) {\r\n                                return null;\r\n                            }\r\n                            return (\r\n                                <MenuItem\r\n                                    active={project.id === defaultProjectId}\r\n                                    disabled={modifiers.disabled}\r\n                                    key={project.id}\r\n                                    onClick={handleClick}\r\n                                    text={project.name}\r\n                                />\r\n                            );\r\n                        }}\r\n                        onItemSelect={({ id }) => setDefaultProject(id)}\r\n                        filterable={false}\r\n                    >\r\n                        <Button text=\"New Items Project\" icon=\"add-to-artifact\" rightIcon=\"double-caret-vertical\" />\r\n                    </Select>\r\n                    <Select\r\n                        className=\"Toolbar-item\"\r\n                        items={Object.keys(SORT_BY).map(k => ({ key: k, value: SORT_BY[k] }))}\r\n                        itemRenderer={(item, { handleClick, modifiers }) => {\r\n                            if (!modifiers.matchesPredicate) {\r\n                                return null;\r\n                            }\r\n\r\n                            const isActive = sortBy.get('field') === item.value;\r\n                            const isAscending = sortBy.get('direction') === SORT_BY_DIRECTION.ASC;\r\n                            let icon = 'blank';\r\n                            if (isActive) {\r\n                                icon = isAscending ? 'caret-up' : 'caret-down';\r\n                            }\r\n                            return (\r\n                                <MenuItem\r\n                                    className={isActive ? Classes.ACTIVE : ''}\r\n                                    key={item.key}\r\n                                    onClick={handleClick}\r\n                                    text={item.value}\r\n                                    icon={icon}\r\n                                />\r\n                            );\r\n                        }}\r\n                        onItemSelect={item => {\r\n                            const isActive = sortBy.get('field') === item.value;\r\n                            const isAscending = sortBy.get('direction') === SORT_BY_DIRECTION.ASC;\r\n                            if (isActive) {\r\n                                if (isAscending) {\r\n                                    setSortBy(item.key, SORT_BY_DIRECTION.DESC);\r\n                                } else {\r\n                                    setSortBy(item.key, SORT_BY_DIRECTION.ASC);\r\n                                }\r\n                            } else {\r\n                                // set new field\r\n                                setSortBy(item.key, SORT_BY_DIRECTION.ASC);\r\n                            }\r\n                        }}\r\n                        filterable={false}>\r\n                        <Button text=\"Sort Lists\" icon=\"sort\" rightIcon=\"double-caret-vertical\" />\r\n                    </Select>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    projects: state.lists.projects,\r\n    filteredPriorities: state.lists.filteredPriorities,\r\n    defaultProjectId: state.lists.defaultProjectId,\r\n    showIfResponsible: state.lists.showIfResponsible,\r\n    showSubtasks: state.lists.showSubtasks,\r\n    sortBy: state.lists.sortBy,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    setDefaultProject: listsActions.setDefaultProject,\r\n    updatePriorityFilter: listsActions.updatePriorityFilter,\r\n    toggleAssigneeFilter: listsActions.toggleAssigneeFilter,\r\n    toggleSubtaskFilter: listsActions.toggleSubtaskFilter,\r\n    setSortBy: listsActions.setSortBy,\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Toolbar);\r\n","import React from 'react';\r\nimport { Button, Card, Classes, InputGroup, Intent, Popover } from '@blueprintjs/core';\r\nimport { actions as listActions } from '../redux/modules/lists';\r\nimport { connect } from 'react-redux';\r\n\r\nclass NewListInput extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            text: '',\r\n            isFocused: false,\r\n        };\r\n    }\r\n\r\n    handleAdd = () => {\r\n        const { addList, user } = this.props;\r\n        const { is_premium: isPremium } = user;\r\n\r\n        if (this.state.text.length === 0 || !isPremium) {\r\n            return;\r\n        }\r\n\r\n        const name = this.state.text.trim();\r\n        const temp_id = window.generateUUID();\r\n\r\n        // note: calling addList within the setState callback prevents the scrollIntoView from functioning as desired.\r\n        addList({ name, temp_id });\r\n\r\n        // add item and clear state\r\n        this.setState(\r\n            {\r\n                text: '',\r\n            },\r\n            () => {\r\n                // scroll right to keep the new list input in view.\r\n                document.getElementById('new-list-input').scrollIntoView();\r\n                // stay at the top\r\n                window.scroll(0, 0);\r\n            }\r\n        );\r\n    };\r\n\r\n    // allow creation of list using 'enter' key.\r\n    // note: input should stay focused.\r\n    handleIfEnter = e => {\r\n        if (e.key === 'Enter') {\r\n            this.handleAdd();\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { user } = this.props;\r\n        const { isFocused } = this.state;\r\n        const { is_premium: isPremium } = user;\r\n\r\n        const addButton = (\r\n            <Button\r\n                className={Classes.MINIMAL}\r\n                icon=\"add\"\r\n                intent={Intent.SUCCESS}\r\n                disabled={this.state.text.length === 0 || !isPremium}\r\n                onClick={this.handleAdd}\r\n            />\r\n        );\r\n\r\n        return (\r\n            <div className=\"NewListInput list-panel-item\" id=\"new-list-input\">\r\n                <Popover\r\n                    usePortal={true}\r\n                    isOpen={isFocused && !isPremium}\r\n                    content={\r\n                        <Card>\r\n                            Creating lists requires <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://todoist.com/premium?ref=kanbanist\">Todoist Premium</a>.\r\n                        </Card>\r\n                    }\r\n                    target={\r\n                        <InputGroup\r\n                            value={this.state.text}\r\n                            type=\"text\"\r\n                            placeholder=\"Add a list...\"\r\n                            onKeyPress={this.handleIfEnter}\r\n                            onChange={event => this.setState({ text: isPremium ? event.target.value : '' })}\r\n                            rightElement={addButton}\r\n                            className=\"NewListInput-input\"\r\n                            onFocus={() => this.setState({ isFocused: true })}\r\n                            onBlur={() => setTimeout(() => this.setState({ isFocused: false }), 100)}\r\n                        />\r\n                    }\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    user: state.user.user,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    addList: listActions.addList,\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(NewListInput);\r\n","import React from 'react';\r\nimport { Button, EditableText, Menu, MenuItem, Popover, Position } from '@blueprintjs/core';\r\n\r\nexport default class ListTitle extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            title: props.title,\r\n            isEditing: false,\r\n        };\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.props.title !== prevProps.title) {\r\n            this.setState({ title: this.props.title });\r\n        }\r\n    }\r\n\r\n    handleRename = () => {\r\n        const title = this.state.title;\r\n        const { onRename } = this.props;\r\n        if (title.length > 0) {\r\n            this.setState({ isEditing: false }, () => onRename(title));\r\n        } else {\r\n            this.setState({ title: this.props.title });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { disabled, showListMenu, onDelete, onCompleteAll } = this.props;\r\n        const { isEditing } = this.state;\r\n\r\n        const listMenu = (\r\n            <Menu>\r\n                <MenuItem icon=\"trash\" onClick={onDelete} text=\"Delete list\" />\r\n                <MenuItem icon=\"tick\" onClick={onCompleteAll} text=\"Mark all as done\" />\r\n            </Menu>\r\n        );\r\n\r\n        const menuButton = (\r\n            <Popover content={listMenu} position={Position.RIGHT}>\r\n                <Button className=\"list-panel-title-close-button bp3-minimal bp3-small\" icon=\"menu-open\" />\r\n            </Popover>\r\n        );\r\n\r\n        return (\r\n            <div className=\"list-panel-title\">\r\n                <div className=\"list-panel-title-text-div\" onClick={() => this.setState({ isEditing: true })}>\r\n                    <EditableText\r\n                        isEditing={isEditing}\r\n                        className=\"list-panel-title-text\"\r\n                        value={this.state.title}\r\n                        disabled={disabled}\r\n                        onChange={newValue => this.setState({ title: newValue })}\r\n                        onConfirm={this.handleRename}\r\n                        onCancel={() => this.setState({ isEditing: false })}\r\n                    />\r\n                </div>\r\n                <div className=\"list-panel-title-close-button-div\">{showListMenu ? menuButton : <div />}</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import { Record } from 'immutable';\r\nimport moment from 'moment';\r\n\r\nconst DueDateRecord = Record({\r\n    due_moment: null,\r\n    has_time: false,\r\n});\r\n\r\nexport default class DueDate extends DueDateRecord {\r\n    updateWith({ due_moment, has_time }) {\r\n        return new DueDate({\r\n            due_moment: due_moment || this.due_moment,\r\n            has_time: has_time != null ? has_time : this.has_time,\r\n        });\r\n    }\r\n\r\n    isExpired() {\r\n        return this.due_moment.isBefore(moment().startOf('day'));\r\n    }\r\n\r\n    format() {\r\n        const isCurrentYear = this.due_moment.year() === moment().year();\r\n        const dateFormat = isCurrentYear ? 'Do MMM' : 'Do MMM YY'; // also display year, if it does not match the current year\r\n        const dueDateTimeFormat = this.has_time ? dateFormat + ' LT' : dateFormat;\r\n        return this.due_moment.format(dueDateTimeFormat);\r\n    }\r\n}\r\n\r\nexport const parseDueDate = dateTimeStr => {\r\n    const due_moment = moment(dateTimeStr);\r\n    let has_time = true;\r\n    // If time is exactly zero and no colon is found in the ISO 8601 datetime string, it means\r\n    // no time was given.\r\n    if (\r\n        due_moment.hours() === 0 &&\r\n        due_moment.minutes() === 0 &&\r\n        due_moment.seconds() === 0 &&\r\n        due_moment.milliseconds() === 0 &&\r\n        !/:/.test(dateTimeStr)\r\n    ) {\r\n        has_time = false;\r\n    }\r\n    return new DueDate({ due_moment, has_time });\r\n};\r\n","import React from 'react';\r\nimport { parseDueDate } from '../core/DueDate';\r\n\r\nconst DISPLAY_TYPE = {\r\n    DATE: 'DATE',\r\n    RELATIVE: 'RELATIVE',\r\n};\r\n\r\nexport default class ListItemDueDate extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const { dueDate } = props;\r\n        this.state = {\r\n            dueDate: dueDate ? parseDueDate(dueDate) : null,\r\n            displayType: DISPLAY_TYPE.DATE,\r\n        };\r\n    }\r\n\r\n    handleToggleDisplayType = () => {\r\n        const displayType =\r\n            this.state.displayType === DISPLAY_TYPE.RELATIVE ? DISPLAY_TYPE.DATE : DISPLAY_TYPE.RELATIVE;\r\n        this.setState({ displayType });\r\n    };\r\n\r\n    render() {\r\n        const { dueDate, displayType } = this.state;\r\n\r\n        if (dueDate === null) {\r\n            return null;\r\n        }\r\n\r\n        let text = '';\r\n        switch (displayType) {\r\n            case DISPLAY_TYPE.DATE:\r\n                text = dueDate.format();\r\n                break;\r\n            case DISPLAY_TYPE.RELATIVE:\r\n                text = dueDate.due_moment.fromNow();\r\n                break;\r\n            default:\r\n                console.error('Unknown displayType for ListItemDueDate: ', displayType);\r\n        }\r\n\r\n        const classes = ['ListItem-project-duedate', dueDate.isExpired() ? 'overdue' : ''].join(' ');\r\n\r\n        return (\r\n            <span className={classes} onClick={this.handleToggleDisplayType}>\r\n                {text}\r\n            </span>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { EditableText, Checkbox, Icon, Popover, Position } from '@blueprintjs/core';\r\nimport { DatePicker } from \"@blueprintjs/datetime\";\r\nimport '@blueprintjs/core/lib/css/blueprint.css';\r\nimport '@blueprintjs/datetime/lib/css/blueprint-datetime.css';\r\nimport { markdown } from 'markdown';\r\nimport $ from 'jquery';\r\nimport ListItemDueDate from './ListItemDueDate';\r\nimport Todoist from '../todoist-client/Todoist';\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\nimport classNames from  \"classnames\";\r\nimport moment from 'moment';\r\n\r\n\r\nconst outlookRegex = /\\[\\[\\s*outlook=id3=(.*?),([^\\]]*)\\]\\]/;\r\nconst isOutlookText = rawText => {\r\n    return outlookRegex.test(rawText);\r\n};\r\n\r\nclass ListItem extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isEditing: false,\r\n            previousRawText: props.item.text,\r\n            rawText: props.item.text,\r\n            formattedText: this.format(props.item.text),\r\n            checked: props.checked,\r\n        };\r\n    }\r\n\r\n    format = text => {\r\n        // Convert outlook-id-3 format to regular markdown\r\n        if (isOutlookText(text)) {\r\n            return this.formatOutlookLink(text);\r\n        }\r\n\r\n        // Convert custom Todoist formatting into regular markdown.\r\n        // See: https://support.todoist.com/hc/en-us/articles/205195102-Text-formatting\r\n        const todoistToMd = text\r\n            .replace(/!!(.*?)!!/g, '**$1**')\r\n            // eslint-disable-next-line\r\n            .replace(\r\n                /[^[(]?(https?:\\/\\/(?:www\\.|(?!www))[^\\s.]+\\.[^\\s]{2,}|www\\.[^\\s]+\\.[^\\s]{2,}) \\((.*?)\\)/g,\r\n                '[$2]($1)'\r\n            );\r\n\r\n        return markdown\r\n            .toHTML(todoistToMd)\r\n            .replace(/<\\/?p>/g, '')\r\n            .replace(/a href/g, 'a target=\"_blank\" href')\r\n            .replace(/<h(\\d)>/g, (_, num) => '#'.repeat(num))\r\n            .replace(/<\\/h\\d>/g, '');\r\n    };\r\n\r\n    formatOutlookLink = text => {\r\n        const content = this.getOutlookContent(text);\r\n        return markdown.toHTML(content).replace(/<\\/?p>/g, '');\r\n    };\r\n\r\n    getOutlookContent = text => {\r\n        const outlookRegex = /\\[\\[\\s*outlook=id3=(.*?),([^\\]]*)\\]\\]/;\r\n        const matches = text.match(outlookRegex);\r\n        // const base64String = matches[1];\r\n        const content = matches[2];\r\n        return content;\r\n    };\r\n\r\n    updateOutlookItem = (rawText, content) => {\r\n        const beggining = rawText.split(',')[0];\r\n        return `${beggining},${content}]]`;\r\n    };\r\n\r\n    handleChange = updatedText => {\r\n        const { rawText } = this.state;\r\n        const isOutlook = isOutlookText(rawText);\r\n        const isNewLine = updatedText.indexOf('\\n') >= 0;\r\n        if (isNewLine) {\r\n            this.updateItem();\r\n        } else {\r\n            const newRawText = isOutlook ? this.updateOutlookItem(rawText, updatedText) : updatedText;\r\n            this.setState({ rawText: newRawText });\r\n        }\r\n    };\r\n\r\n    handleCheck = () => {\r\n        this.setState({ checked: true }, () => setTimeout(() => this.props.onComplete(this.props.item), 800));\r\n    };\r\n\r\n    handleOnEdit = () => {\r\n        this.setState({ isEditing: true });\r\n    };\r\n\r\n    handleCancel = () => {\r\n        this.setState({\r\n            formattedText: this.format(this.state.previousRawText),\r\n            rawText: this.state.previousRawText,\r\n            isEditing: false,\r\n        });\r\n    };\r\n\r\n    updateItem = () => {\r\n        const { item, onUpdate } = this.props;\r\n        const { rawText } = this.state;\r\n        // Only update if the value actually changed. Note that this may\r\n        // need to be changed if we allow for changing other properties of\r\n        // a task (like the project) in the future.\r\n        if (item.text !== rawText) {\r\n            onUpdate(item, { text: rawText });\r\n        }\r\n        this.setState({\r\n            previousRawText: rawText,\r\n            isEditing: false,\r\n            formattedText: this.format(rawText),\r\n        });\r\n    };\r\n\r\n    setDueDate = (dueDate) => {\r\n        const { item, onUpdate } = this.props;\r\n        const due = {\r\n            date: dueDate ? moment(dueDate).format('YYYY-MM-DD') : null,\r\n        };\r\n        onUpdate(item, { due });\r\n    };\r\n\r\n    /**\r\n     * This method converts all links into links that open in another tab and also\r\n     * prevents the clicking of the link from causing a click event on the container\r\n     * div which enables edit mode.\r\n     */\r\n    applyLinkFixes = () => {\r\n        $(`#${this.props.item.id} a`).attr('target', '_blank');\r\n        $(`#${this.props.item.id}`).on('click', 'a', e => e.stopPropagation());\r\n    };\r\n\r\n    // Apply link fix when we first mount the component...\r\n    componentDidMount() {\r\n        this.applyLinkFixes();\r\n    }\r\n\r\n    // ... and again whenever we update it.\r\n    componentDidUpdate() {\r\n        this.applyLinkFixes();\r\n    }\r\n\r\n    render() {\r\n        const { item, collaborator, index, instanceList } = this.props;\r\n        const { checked, rawText, formattedText, isEditing } = this.state;\r\n\r\n        const isOutlook = isOutlookText(rawText);\r\n        const isRecurring = item.recurring;\r\n        const opacity = checked ? 0.5 : 1;\r\n\r\n        return (\r\n            <Draggable\r\n                key={`${item.id}`}\r\n                draggableId={`item-${item.id}-${instanceList.id}`}\r\n                index={index}\r\n            >\r\n                {(provided, snapshot) => (\r\n                    <div\r\n                        ref={provided.innerRef}\r\n                        {...provided.draggableProps}\r\n                        {...provided.dragHandleProps}\r\n                        style={{ opacity, ...provided.draggableProps.style }}\r\n                        id={item.id}\r\n                        className={classNames('ListItem', `color-${item.project.color}`, { 'dragging': snapshot.isDragging })}\r\n                    >\r\n                        <div className=\"ListItem-inner\">\r\n                            <div className=\"ListItem-inner-top\">\r\n                                <Checkbox\r\n                                    className={`ListItem-checkbox priority-${item.priority}`}\r\n                                    onChange={this.handleCheck}\r\n                                    checked={checked}\r\n                                    disabled={isEditing}\r\n                                />\r\n                                {isEditing ? (\r\n                                    <EditableText\r\n                                        className=\"ListItem-text\"\r\n                                        multiline\r\n                                        value={!isOutlook ? rawText : this.getOutlookContent(rawText)}\r\n                                        isEditing={true}\r\n                                        onChange={this.handleChange}\r\n                                        disabled={checked}\r\n                                        onConfirm={(/* for some reason this fires on blur */) => this.setState({ isEditing: false, rawText: item.text })}\r\n                                        onCancel={() => this.setState({ isEditing: false, rawText: item.text })}\r\n                                    />\r\n                                ) : (\r\n                                    <div className=\"ListItem-text ListItem-text-formatted\" onClick={this.handleOnEdit}>\r\n                                        <span dangerouslySetInnerHTML={{ __html: formattedText }} />\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                            <div className=\"ListItem-inner-bottom\">\r\n                                <div className=\"non-edit-text\">\r\n                                    <div className=\"left-align\">\r\n                                        <span className=\"ListItem-project-name\">{item.project.name}</span>\r\n                                        <a href={`https://todoist.com/showTask?id=${item.id}`} className=\"task-link-wrapper\">\r\n                                            <Icon className=\"ListItem-task-icon\" icon=\"link\" iconSize={10} />\r\n                                        </a>\r\n                                        <Popover\r\n                                            minimal={true}\r\n                                            position={Position.BOTTOM}\r\n                                            content={\r\n                                                <DatePicker\r\n                                                    clearButtonText={\"No Date\"}\r\n                                                    highlightCurrentDay={true}\r\n                                                    value={item.due_date_utc ? new Date(item.due_date_utc) : undefined}\r\n                                                    onChange={(date, isUserChange) => isUserChange && this.setDueDate(date)}\r\n                                                    showActionsBar={true}\r\n                                                    minDate={moment().subtract(10, 'years').toDate()}\r\n                                                    maxDate={moment().add(10, 'years').toDate()}\r\n                                                />\r\n                                            }\r\n                                            target={\r\n                                                <Icon\r\n                                                    className=\"task-link-wrapper ListItem-task-icon\"\r\n                                                    icon=\"calendar\"\r\n                                                    iconSize={10}\r\n                                                />\r\n                                            }\r\n                                        />\r\n                                    </div>\r\n                                    {isOutlook ? (\r\n                                        <Icon className=\"ListItem-recurring-icon\" icon=\"envelope\" iconSize={12} />\r\n                                    ) : null}\r\n                                    {isRecurring ? (\r\n                                        <Icon className=\"ListItem-recurring-icon\" icon=\"exchange\" iconSize={14} />\r\n                                    ) : null}\r\n                                    <ListItemDueDate dueDate={item.due_date_utc} />\r\n                                    {collaborator ? (\r\n                                        collaborator.image_id ? (\r\n                                            <img\r\n                                                className=\"ListItem-project-avatar\"\r\n                                                alt={`Assigned to ${collaborator.full_name}`}\r\n                                                width=\"18\"\r\n                                                height=\"18\"\r\n                                                src={Todoist.getAvatarUrl(collaborator.image_id, 'small')}\r\n                                                data-tip={collaborator.full_name}\r\n                                            />\r\n                                        ) : (\r\n                                            <span data-tip={collaborator.full_name}>\r\n                                            {collaborator.full_name\r\n                                                .split(' ')\r\n                                                .map(a => a[0])\r\n                                                .join('')}\r\n                                        </span>\r\n                                        )\r\n                                    ) : null}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </Draggable>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ListItem;","import React from 'react';\r\nimport { EditableText } from '@blueprintjs/core';\r\n\r\nexport default class NewListItemInput extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            newCommentText: '',\r\n            isEditing: false,\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Invoked when user cancels input with the esc key, blurs focus or\r\n     * (unfortuntely TODO!) when a user presses cmd+enter (the standard)\r\n     * approach to confirming a multiline EditableText.\r\n     */\r\n    handleBlur = () => {\r\n        this.setState({\r\n            newCommentText: '',\r\n            isEditing: false,\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Invoked when user changes input in any way.\r\n     */\r\n    handleChange = text => {\r\n        const { onAdd } = this.props;\r\n        // Make EditableText handle 'enter' press as submission (normally it would just\r\n        // add a newline to the comment).\r\n        const isNewLine = text.indexOf('\\n') >= 0;\r\n        if (isNewLine) {\r\n            const itemText = this.state.newCommentText;\r\n            this.setState({ newCommentText: '', isEditing: false }, () => onAdd(itemText));\r\n        } else {\r\n            this.setState({ newCommentText: text });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"NewListItemInput\">\r\n                <div onClick={() => this.setState({ isEditing: true })}>\r\n                    <EditableText\r\n                        isEditing={this.state.isEditing}\r\n                        multiline\r\n                        value={this.state.newCommentText}\r\n                        minLines={1}\r\n                        placeholder=\"Add item (press enter to save)...\"\r\n                        onChange={this.handleChange}\r\n                        onConfirm={this.handleBlur}\r\n                        onCancel={() => this.setState({ isEditing: false })}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import { Position, Toaster } from '@blueprintjs/core';\r\n\r\nexport const BoardToaster = Toaster.create({\r\n    className: 'BoardToaster-toaster',\r\n    position: Position.BOTTOM_RIGHT,\r\n});\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport flow from 'lodash/flow';\r\nimport { Intent } from '@blueprintjs/core';\r\nimport classNames from 'classnames';\r\n\r\nimport ListTitle from './ListTitle';\r\nimport ListItem from './ListItem';\r\nimport NewListItemInput from './NewListItemInput';\r\nimport { BoardToaster } from './Toaster';\r\n\r\nimport { defaultPriority } from '../core/Priority';\r\nimport { connect } from 'react-redux';\r\nimport { actions as listActions } from '../redux/modules/lists';\r\nimport { Droppable } from \"react-beautiful-dnd\";\r\n\r\nexport const draggable = (Component) => {\r\n    return class extends React.Component {\r\n        render() {\r\n            return (\r\n                <Component />\r\n            );\r\n        }\r\n    }\r\n};\r\n\r\nclass List extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            allChecked: false,\r\n        };\r\n\r\n        this.listItemsRef = React.createRef();\r\n    }\r\n\r\n    scrollToBottom = () => {\r\n        setTimeout(() => {\r\n            if (this.listItemsRef.current) {\r\n                this.listItemsRef.current.scrollTop = this.listItemsRef.current.scrollHeight\r\n            }\r\n        }, 50)\r\n    };\r\n\r\n    addItem = newCommentText => {\r\n        if (newCommentText.length <= 0) {\r\n            return;\r\n        }\r\n\r\n        const { list, onAdd } = this.props;\r\n\r\n        // replace any urls with markdown links\r\n        const content = newCommentText.replace(\r\n            /(https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_+.~#?&/=]*))/g,\r\n            '[$1]($1)'\r\n        );\r\n        const temp_id = window.generateUUID();\r\n\r\n        // Force item to bottom of list.\r\n        // TODO: properly order and properly place empty box\r\n        const item_order = list.items.reduce((max, item) => (max > item.item_order ? max : item.item_order), 0) + 1;\r\n\r\n        onAdd(list, { content, temp_id, item_order, priority: defaultPriority.key }, this.handleNewItemIsHidden);\r\n        this.scrollToBottom();\r\n    };\r\n\r\n    handleNewItemIsHidden = reason => {\r\n        BoardToaster.show({ message: reason, intent: Intent.WARNING, timeout: 5000 });\r\n    };\r\n\r\n    handleRename = newName => {\r\n        const { list, onListRename } = this.props;\r\n        if (list.title !== newName) {\r\n            onListRename(list, newName);\r\n        }\r\n    };\r\n\r\n    handleCompleteAll = () => {\r\n        const { list, onListCompleteAll } = this.props;\r\n\r\n        const millisToWait = 800; // Keep the same as ListItem#handleCheck.\r\n        const completeAll = () =>\r\n            setTimeout(() => {\r\n                onListCompleteAll(list);\r\n                this.setState({ allChecked: false });\r\n            }, millisToWait);\r\n\r\n        this.setState(\r\n            {\r\n                allChecked: true,\r\n            },\r\n            completeAll\r\n        );\r\n    };\r\n\r\n    handleDelete = () => {\r\n        this.props.onListDelete(this.props.list);\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            list,\r\n            canEditTitle,\r\n            showListMenu,\r\n            className,\r\n            collaborators,\r\n            draggableProps,\r\n            style,\r\n        } = this.props;\r\n\r\n        return (\r\n            <div style={style} className={className + ' List list-panel-item'} {...draggableProps}>\r\n                <ListTitle\r\n                    title={list.title}\r\n                    onRename={this.handleRename}\r\n                    onDelete={this.handleDelete}\r\n                    onCompleteAll={this.handleCompleteAll}\r\n                    disabled={!canEditTitle}\r\n                    showListMenu={showListMenu}\r\n                />\r\n                <Droppable droppableId={`${list.id}`}>\r\n                    {(provided, snapshot) => (\r\n                        <div className=\"List-list-items-wrapper\" ref={provided.innerRef}>\r\n                            <div className={classNames(\"List-list-items\", {\"isDraggingOver\": snapshot.isDraggingOver})} ref={this.listItemsRef}>\r\n                                {list.items.map((item,idx) => (\r\n                                    <ListItem\r\n                                        index={idx}\r\n                                        key={`${item.id}|${item.text.hashCode()}|${item.due_date_utc}|${this.state.allChecked}`}\r\n                                        item={item}\r\n                                        instanceList={list}\r\n                                        onUpdate={this.props.onListItemUpdate}\r\n                                        onComplete={this.props.onListItemComplete}\r\n                                        checked={this.state.allChecked}\r\n                                        collaborator={collaborators.find(c => c.id === item.responsible_uid)}\r\n                                    />\r\n                                ))}\r\n                                <div style={{ overflowAnchor: 'auto', height: '1px' }}/>\r\n                                { provided.placeholder }\r\n                            </div>\r\n                            <div className=\"new-list-item-input-wrapper\">\r\n                                <NewListItemInput onAdd={this.addItem} />\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </Droppable>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nList.propTypes = {\r\n    list: PropTypes.any.isRequired,\r\n    canEditTitle: PropTypes.bool,\r\n    showListMenu: PropTypes.bool,\r\n    className: PropTypes.string,\r\n};\r\n\r\nList.defaultProps = {\r\n    canEditTitle: true,\r\n    showListMenu: true,\r\n    className: '',\r\n};\r\n\r\n// Connect to redux state/actions\r\nconst mapStateToProps = state => ({\r\n    sortBy: state.lists.sortBy,\r\n    collaborators: state.lists.collaborators,\r\n});\r\n\r\nconst {\r\n    addListItem,\r\n    renameList,\r\n    deleteList,\r\n    completeList,\r\n    updateListItem,\r\n    completeListItem,\r\n} = listActions;\r\n\r\nconst mapDispatchToProps = {\r\n    onAdd: addListItem,\r\n    onListRename: renameList,\r\n    onListDelete: deleteList,\r\n    onListCompleteAll: completeList,\r\n    onListItemUpdate: updateListItem,\r\n    onListItemComplete: completeListItem,\r\n};\r\n\r\nexport default flow(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n)(List);\r\n","import React from 'react';\r\nimport List from './List';\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\n\r\nexport default class DraggableList extends React.Component {\r\n    render () {\r\n        const { list, index } = this.props;\r\n        return (\r\n            <Draggable\r\n                draggableId={`list-${list.id}`}\r\n                index={index}\r\n            >\r\n                {(provided, snapshot) => {\r\n                    const draggableProps = {\r\n                        ref: provided.innerRef,\r\n                        ...provided.draggableProps,\r\n                        ...provided.dragHandleProps,\r\n                    };\r\n                    const dynamicStyle = {\r\n                        ...provided.draggableProps.style,\r\n                    };\r\n                    return (\r\n                        <List\r\n                            { ...this.props }\r\n                            draggableProps={draggableProps}\r\n                            style={dynamicStyle}\r\n                        />\r\n                    )\r\n                }}\r\n            </Draggable>\r\n\r\n        );\r\n    }\r\n}","export const types = {\r\n    LOGIN: 'LOGIN',\r\n    LOGOUT: 'LOGOUT',\r\n};\r\n\r\nconst initialState = {\r\n    loggedIn: false,\r\n    user: {},\r\n};\r\n\r\nexport const actions = {\r\n    login: user => ({ type: types.LOGIN, payload: user }),\r\n    logout: () => ({ type: types.LOGOUT }),\r\n};\r\n\r\nexport const reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.LOGIN:\r\n            return { ...state, user: action.payload, loggedIn: true };\r\n        case types.LOGOUT:\r\n            return { ...state, user: {}, loggedIn: false };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Dialog, InputGroup, Intent } from '@blueprintjs/core';\r\nimport Todoist from '../todoist-client/Todoist';\r\nimport { actions as userActions } from '../redux/modules/user';\r\nimport { actions as listActions } from '../redux/modules/lists';\r\n\r\nclass LoginDialog extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            apiTokenField: '',\r\n            loginIntent: Intent.PRIMARY,\r\n            loading: false,\r\n        };\r\n    }\r\n\r\n    handleLogin = () => {\r\n        this.setState(\r\n            {\r\n                loading: true,\r\n            },\r\n            () => {\r\n                Todoist.getUser(this.state.apiTokenField)\r\n                    .then(res => {\r\n                        if (res.error) {\r\n                            console.warn('could not login user:', res);\r\n                            this.setState({\r\n                                loading: false,\r\n                                loginIntent: Intent.DANGER,\r\n                            });\r\n                        } else {\r\n                            this.setState({ loading: false }, () => this.props.login(res.user));\r\n                        }\r\n                    })\r\n                    .catch(err => {\r\n                        console.error('could not get user:', err);\r\n                        this.setState({\r\n                            loading: false,\r\n                            loginIntent: Intent.DANGER,\r\n                        });\r\n                    });\r\n            }\r\n        );\r\n    };\r\n\r\n    isValidToken = () => this.state.apiTokenField.length >= 40;\r\n\r\n    render() {\r\n        return (\r\n            <Dialog\r\n                autoFocus={true}\r\n                canEscapeKeyClose={false}\r\n                canOutsideClickClose={false}\r\n                enforceFocus={true}\r\n                isCloseButtonShown={false}\r\n                icon=\"log-in\"\r\n                isOpen={!this.props.loggedIn}\r\n                title=\"Login\">\r\n                <div className=\"bp3-dialog-body\">\r\n                    <p>Please enter your Todoist API token below.</p>\r\n                    <p className=\"small-text\">\r\n                        Your <strong>API token</strong> can be found in Todoist Settings under the{' '}\r\n                        <a\r\n                            href=\"https://todoist.com/Users/viewPrefs?page=integrations\"\r\n                            target=\"_blank\"\r\n                            rel=\"noopener noreferrer\"\r\n                            className=\"link\">\r\n                            Integrations menu\r\n                        </a>\r\n                        .<br />\r\n                        Note that this API token is only stored locally on your computer and is never sent to Kanbanist.\r\n                    </p>\r\n                    <InputGroup\r\n                        value={this.state.apiTokenField}\r\n                        intent={this.state.loginIntent}\r\n                        leftIcon=\"user\"\r\n                        type=\"text\"\r\n                        placeholder=\"API Token e.g. 2cc9d26a60a8ad40d08724d92db9ad496ae6fe20\"\r\n                        onKeyPress={(e) => e.key === 'Enter' && this.isValidToken() && this.handleLogin()}\r\n                        onChange={event => this.setState({ apiTokenField: event.target.value })}\r\n                    />\r\n                    <p className=\"small-text\">\r\n                        If you are seeing this login screen whenever you visit Kanbanist, please make sure your browser\r\n                        is not clearing website data (localStorage) when you close the window.\r\n                    </p>\r\n                </div>\r\n                <div className=\"bp3-dialog-footer\">\r\n                    <div className=\"bp3-dialog-footer-actions\">\r\n                        <Link to=\"/\">\r\n                            <Button text=\"Cancel\" intent={Intent.DANGER} />\r\n                        </Link>\r\n                        <Button\r\n                            intent={Intent.PRIMARY}\r\n                            onClick={this.handleLogin}\r\n                            text=\"Login\"\r\n                            loading={this.state.loading}\r\n                            disabled={!this.isValidToken()}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = () => ({\r\n    // empty\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        login: user => {\r\n            dispatch(userActions.login(user));\r\n            dispatch(listActions.fetchLists());\r\n        },\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(LoginDialog);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport flow from 'lodash/flow';\r\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\r\n\r\nimport NewListInput from '../components/NewListInput';\r\nimport List  from '../components/List';\r\nimport DraggableList from \"../components/DraggableList\";\r\nimport LoginDialog from '../components/LoginDialog';\r\n\r\nimport { actions as listActions, isListBacklog } from '../redux/modules/lists';\r\n\r\nconst FETCH_INTERVAL = 60000; // 60s\r\n\r\nconst DRAGGABLE_TYPES = {\r\n    ITEM: 'item',\r\n    LIST: 'list',\r\n};\r\n\r\nclass ListsPanel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.intervalId = null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { loggedIn, fetch } = this.props;\r\n        if (loggedIn) {\r\n            fetch();\r\n            this.intervalId = setInterval(fetch, FETCH_INTERVAL);\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.intervalId) {\r\n            clearInterval(this.intervalId);\r\n        }\r\n    }\r\n\r\n    onDragEnd = result => {\r\n        const { moveItem, updateListIndex } = this.props;\r\n        const { source, destination, draggableId: rawDraggableId } = result;\r\n\r\n        // dropped outside the list\r\n        if (!destination) {\r\n            return;\r\n        }\r\n\r\n        const [ type, draggableId ] = rawDraggableId.split('-');\r\n\r\n        if (type === DRAGGABLE_TYPES.ITEM) {\r\n            const itemId = draggableId;\r\n            const fromListId = source.droppableId;\r\n            const toListId = destination.droppableId;\r\n            const index = destination.index;\r\n            return moveItem(itemId, fromListId, toListId, index);\r\n        }\r\n\r\n        if (type === DRAGGABLE_TYPES.LIST) {\r\n            const listId = draggableId;\r\n            const index = destination.index;\r\n            return updateListIndex(listId, index);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { loggedIn, lists, showBacklog, backlogList } = this.props;\r\n\r\n        const listToRender = (showBacklog ? [backlogList] : []).concat(lists.toArray());\r\n\r\n        return (\r\n            <div className=\"ListsPanel\" style={this.props.style}>\r\n                <DragDropContext onDragEnd={this.onDragEnd}>\r\n                    { !loggedIn ? <LoginDialog /> : null }\r\n                    <Droppable droppableId=\"lists\" type=\"COLUMN\" direction=\"horizontal\">\r\n                        {(provided, snapshot) => (\r\n                            <div className=\"ListPanel-inner\" ref={provided.innerRef}>\r\n                                {listToRender.map((list, idx) => {\r\n                                    if (isListBacklog(list)){\r\n                                        return (\r\n                                            <List\r\n                                                key={list.id}\r\n                                                list={list}\r\n                                                className=\"BacklogList List\"\r\n                                                canEditTitle={false}\r\n                                                showListMenu={false}\r\n                                            />\r\n                                        );\r\n                                    } else {\r\n                                        return (\r\n                                            <DraggableList\r\n                                                className={'DraggableList'}\r\n                                                key={list.id}\r\n                                                list={list}\r\n                                                index={idx + (showBacklog ? -1 : 0)}\r\n                                            />\r\n                                        );\r\n                                    }\r\n                                })}\r\n                                { provided.placeholder }\r\n                                <NewListInput />\r\n                            </div>\r\n                        )}\r\n                    </Droppable>\r\n                </DragDropContext>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    loggedIn: state.user.loggedIn,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    fetch: listActions.fetchLists,\r\n    moveItem: listActions.moveItem,\r\n    updateListIndex: listActions.updateListIndex,\r\n};\r\n\r\n// Connect to redux store and add DragDropContext.\r\nexport default flow(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n)(ListsPanel);\r\n","import { push } from 'connected-react-router';\r\nimport { types } from '../modules/lists';\r\nimport { List } from 'immutable';\r\nimport { priorities } from '../../core/Priority';\r\n\r\nexport function generateQueryString({\r\n    lists,\r\n    projects,\r\n    filteredLists,\r\n    filteredProjects,\r\n    filteredPriorities,\r\n    filterDueDate,\r\n    showIfResponsible,\r\n    startDate,\r\n    endDate,\r\n    namedFilter,\r\n}) {\r\n    const queryParams = {};\r\n\r\n    if (!filteredLists.isEmpty()) {\r\n        const visibleLists = lists\r\n            .filter(list => !filteredLists.map(el => el.id).contains(list.id))\r\n            .map(list => list.title);\r\n\r\n        queryParams['lists'] = JSON.stringify(visibleLists.toArray());\r\n    }\r\n\r\n    if (!filteredProjects.isEmpty()) {\r\n        const visibleProjects = projects\r\n            .filter(project => !filteredProjects.map(el => el.id).contains(project.id))\r\n            .map(project => project.name);\r\n\r\n        queryParams['projects'] = JSON.stringify(visibleProjects.toArray());\r\n    }\r\n\r\n    if (!filteredPriorities.isEmpty()) {\r\n        const visiblePriorities = priorities\r\n            .filter(p => !filteredPriorities.map(el => el.id).contains(p.id))\r\n            .map(p => p.id);\r\n        queryParams['priorities'] = JSON.stringify(visiblePriorities.toArray());\r\n    }\r\n\r\n    if (showIfResponsible) {\r\n        queryParams['assigned'] = JSON.stringify(showIfResponsible);\r\n    }\r\n\r\n    // If startDate/endDate are `undefined` then they were not the filter being updated but if they are `null` then\r\n    // they were being cleared and we want to remove them from the query string.\r\n    const filterStartDate = filterDueDate.get('startDate', null);\r\n    const filterEndDate = filterDueDate.get('endDate', null);\r\n    if (startDate) {\r\n        queryParams['start'] = startDate.valueOf();\r\n    } else if (startDate === undefined && filterStartDate) {\r\n        queryParams['start'] = filterStartDate.valueOf();\r\n    }\r\n\r\n    if (endDate) {\r\n        queryParams['end'] = endDate.valueOf();\r\n    } else if (endDate === undefined && filterEndDate) {\r\n        queryParams['end'] = filterEndDate.valueOf();\r\n    }\r\n\r\n    if (namedFilter) {\r\n        queryParams['filter'] = namedFilter;\r\n    }\r\n\r\n    const keys = List(Object.keys(queryParams));\r\n    return keys.isEmpty() ? '' : '?' + keys.map(key => key + '=' + queryParams[key]).join('&');\r\n}\r\n\r\nconst trelloistFilterUrl = store => next => action => {\r\n    const { router, lists } = store.getState();\r\n    const { dispatch } = store;\r\n    let willShowIfResponsible = lists.showIfResponsible;\r\n    switch (action.type) {\r\n        // Ensures the URL query string is in sync with state every time a filter is updated\r\n        case types.TOGGLE_ASSIGNEE_FILTER:\r\n            willShowIfResponsible = !willShowIfResponsible;\r\n        // eslint-disable-next-line\r\n        // fallthrough\r\n        case types.UPDATE_LISTS_FILTER:\r\n        case types.UPDATE_PROJECTS_FILTER:\r\n        case types.UPDATE_DUE_DATE_FILTER:\r\n        case types.SET_NAMED_FILTER:\r\n        case types.UPDATE_PRIORITY_FILTER:\r\n            // Override the filtered key in lists with the action payload, required as the action hasn't yet happened\r\n            const queryString = generateQueryString({\r\n                ...lists,\r\n                ...action.payload,\r\n                showIfResponsible: willShowIfResponsible,\r\n            });\r\n            if (queryString) {\r\n                dispatch(push(router.location.pathname + queryString));\r\n            } else {\r\n                dispatch(push(router.location.pathname));\r\n            }\r\n            break;\r\n\r\n        case types.CLEAR_FILTERS:\r\n            dispatch(push(router.location.pathname));\r\n            break;\r\n\r\n        default:\r\n        // Nothing.\r\n    }\r\n\r\n    // Fire next action.\r\n    next(action);\r\n};\r\n\r\nexport default trelloistFilterUrl;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport flow from 'lodash/flow';\r\nimport { Button, Intent, NonIdealState } from '@blueprintjs/core';\r\nimport moment from 'moment';\r\n\r\nimport Toolbar from './Toolbar';\r\nimport ListsPanel from '../containers/ListsPanel';\r\nimport { generateQueryString } from '../redux/middleware/trelloist-filter-url';\r\nimport { NAMED_FILTERS } from '../redux/modules/lists';\r\n\r\nconst MIN_SCREEN_SIZE = 740; // pixels\r\n\r\nclass Board extends Component {\r\n    componentDidMount() {\r\n        // Ensure the query string in the URL matches the current filters\r\n        const { history } = this.props;\r\n        const { pathname, search } = history.location;\r\n        const queryString = generateQueryString(this.props);\r\n\r\n        // if we shouldn't have a query string then remove it\r\n        if (queryString === '' && search !== '') {\r\n            history.push(pathname);\r\n            return;\r\n        }\r\n\r\n        if (queryString) {\r\n            const needsUpdate = queryString !== decodeURI(search);\r\n            if (needsUpdate) {\r\n                history.push(pathname + queryString);\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            showToolbar,\r\n            showBacklog,\r\n            backlogList,\r\n            filteredLists,\r\n            lists,\r\n            filteredProjects,\r\n            filteredPriorities,\r\n            filterDueDate,\r\n            namedFilter,\r\n            actions,\r\n            containerWidth,\r\n            showIfResponsible,\r\n            showSubtasks,\r\n            user,\r\n            fetchFail,\r\n            fetching,\r\n        } = this.props;\r\n\r\n        const atBoard = this.props.location.pathname === '/board';\r\n        const shouldShowToolbar = atBoard && showToolbar;\r\n\r\n        const toolbar = (\r\n            <Toolbar\r\n                toggleBacklog={actions.ui.toggleBacklog}\r\n                lists={lists}\r\n                filteredLists={filteredLists}\r\n                updateListsFilter={actions.lists.updateListsFilter}\r\n                filteredProjects={filteredProjects}\r\n                updateProjectsFilter={actions.lists.updateProjectsFilter}\r\n                onClearFilters={actions.lists.clearFilters}\r\n            />\r\n        );\r\n\r\n        // if coming from small screen, show a reminder button.\r\n        const isSmallScreen = containerWidth < MIN_SCREEN_SIZE;\r\n        if (isSmallScreen) {\r\n            return (\r\n                <div className=\"Board\">\r\n                    <div className=\"Board-inner\">\r\n                        <p>It looks like you are visiting from a phone (or a computer with a screen for ants).</p>\r\n                        <p>\r\n                            Kanbanist is built for bigger screens but if you hit the button below, you'll be prompted to\r\n                            create a reminder in Todoist to checkout Kanbanist when you get back to your computer.\r\n                        </p>\r\n                        <div className=\"margin-25px-auto text-align-center\">\r\n                            <a href=\"todoist://addtask?content=Check%20out%20%5BKanbanist%5D(https://kanban.ist)!&date=today\">\r\n                                <Button\r\n                                    text=\"Remind me about Kanbanist\"\r\n                                    intent={Intent.DANGER}\r\n                                    className=\"pt-icon-time\"\r\n                                />\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        // if fetch failed\r\n        if (fetchFail) {\r\n            return (\r\n                <div className=\"Board\">\r\n                    <div className=\"Board-inner\">\r\n                        <NonIdealState\r\n                            visual={fetching ? 'refresh' : 'error'}\r\n                            title=\"Unable to fetch Todoist tasks\"\r\n                            description={\r\n                                <div>\r\n                                    <p>Kanbanist was unable to fetch your Todoist tasks. Please try the following:</p>\r\n                                    <ul style={{ width: '100%', textAlign: 'left' }}>\r\n                                        <li>Ensure you have internet connectivity.</li>\r\n                                        <li>Disable any ad-blockers for this site.</li>\r\n                                        <li>\r\n                                            Check your{' '}\r\n                                            <a\r\n                                                href=\"https://todoist.com/Users/viewPrefs?page=integrations\"\r\n                                                target=\"_blank\"\r\n                                                rel=\"noopener noreferrer\"\r\n                                                className=\"link\">\r\n                                                API token\r\n                                            </a>{' '}\r\n                                            by logging out and back in.\r\n                                        </li>\r\n                                        <li>\r\n                                            If Kanbanist still cannot fetch your tasks,{' '}\r\n                                            <a href=\"mailto:m.wakerman+kanbanistbug@gmail.com?subject=I%20found%20a%20bug%20with%20Kanbanist\">\r\n                                                file a bug\r\n                                            </a>\r\n                                            .\r\n                                        </li>\r\n                                    </ul>\r\n                                    <p />\r\n                                </div>\r\n                            }\r\n                        />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        // Filtering Lists & Items\r\n        const filteredProjectIds = filteredProjects.map(project => project.id);\r\n        const filterStartMoment = filterDueDate.get('startDate', null);\r\n        const filterEndMoment = filterDueDate.get('endDate', null);\r\n        const dueDateFilterIsSet = filterStartMoment !== null && filterEndMoment !== null;\r\n\r\n        const filterFn = item => {\r\n            // project\r\n            if (filteredProjectIds.contains(item.project.id)) {\r\n                return false;\r\n            }\r\n\r\n            // priorities\r\n            if (filteredPriorities.map(p => p.key).contains(item.priority)) {\r\n                return false;\r\n            }\r\n\r\n            // assigned\r\n            if (item.project.shared && showIfResponsible) {\r\n                return item.responsible_uid === user.id;\r\n            }\r\n\r\n            // due date - filter items without a due date\r\n            if (dueDateFilterIsSet && !item.due_date_utc) {\r\n                return false;\r\n            }\r\n\r\n            // named filters\r\n            if (namedFilter) {\r\n                switch (namedFilter) {\r\n                    case NAMED_FILTERS.NEXT_7_DAYS:\r\n                        if (!item.due_date_utc) {\r\n                            return false;\r\n                        }\r\n\r\n                        if (moment(item.due_date_utc).isAfter(moment().add(7, 'days'), 'day')) {\r\n                            return false;\r\n                        }\r\n                        break;\r\n                    case NAMED_FILTERS.TODAY:\r\n                        if (!item.due_date_utc) {\r\n                            return false;\r\n                        }\r\n\r\n                        if (moment(item.due_date_utc).isAfter(moment(), 'day')) {\r\n                            return false;\r\n                        }\r\n                        break;\r\n                    case NAMED_FILTERS.NO_DUE_DATE:\r\n                        if (item.due_date_utc) {\r\n                            return false;\r\n                        }\r\n                        break;\r\n                    default:\r\n                    // no-op\r\n                }\r\n            }\r\n\r\n            // due date - filter items not in due date range\r\n            // note 1: Todoist stores a due date of \"Today\" as \"11:59:59 Yesterday\" so we add 10 minutes to the end of\r\n            //         of the due date range.\r\n            // note 2: As is common, we always show overdue items even if they are not in the range, hence we don't use\r\n            //         the start of the interval at all.\r\n            if (dueDateFilterIsSet && item.due_date_utc) {\r\n                return moment(item.due_date_utc).isBefore(filterEndMoment.clone().add(10, 'minutes'));\r\n            }\r\n\r\n            // subtasks filter\r\n            if (!showSubtasks && item.parent_id !== null) {\r\n                return false;\r\n            }\r\n\r\n            return true;\r\n        };\r\n\r\n        const fullyFilteredLists = lists\r\n            .filter(list => !filteredLists.map(l => l.id).contains(list.id))\r\n            .map(list => list.setItems(list.items.filter(filterFn)));\r\n\r\n        const filteredBacklog = backlogList.setItems(backlogList.items.filter(filterFn));\r\n\r\n        return (\r\n            <div className=\"Board\">\r\n                {shouldShowToolbar ? toolbar : null}\r\n                <ListsPanel\r\n                    lists={fullyFilteredLists}\r\n                    showBacklog={showBacklog}\r\n                    backlogList={filteredBacklog}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        showToolbar: state.ui.showToolbar,\r\n        showBacklog: state.ui.showBacklog,\r\n        backlogList: state.lists.backlog,\r\n        lists: state.lists.lists,\r\n        filteredLists: state.lists.filteredLists,\r\n        projects: state.lists.projects,\r\n        defaultProjectId: state.lists.defaultProjectId,\r\n        filteredProjects: state.lists.filteredProjects,\r\n        filteredPriorities: state.lists.filteredPriorities,\r\n        filterDueDate: state.lists.filterDueDate,\r\n        namedFilter: state.lists.namedFilter,\r\n        showIfResponsible: state.lists.showIfResponsible,\r\n        showSubtasks: state.lists.showSubtasks,\r\n        user: state.user.user,\r\n        fetchFail: state.lists.fetchFail,\r\n        fetching: state.lists.fetching,\r\n    };\r\n};\r\n\r\nexport default flow(\r\n    connect(mapStateToProps),\r\n)(Board);\r\n","export const types = {\r\n    TOGGLE_TOOLBAR: 'TOGGLE_TOOLBAR',\r\n    TOGGLE_BACKLOG: 'TOGGLE_BACKLOG',\r\n    RESTORE_INITIAL_STATE: 'RESTORE_INITIAL_STATE',\r\n};\r\n\r\nconst initialState = {\r\n    showToolbar: false,\r\n    showBacklog: false,\r\n};\r\n\r\nexport const reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.TOGGLE_TOOLBAR:\r\n            // If we toggle the toolbar, we also close the backlog.\r\n            const next = !state.showToolbar;\r\n            if (next) {\r\n                return { ...state, showToolbar: next };\r\n            } else {\r\n                return { ...state, showBacklog: false, showToolbar: next };\r\n            }\r\n        case types.TOGGLE_BACKLOG:\r\n            return { ...state, showBacklog: !state.showBacklog };\r\n        case types.RESTORE_INITIAL_STATE:\r\n            return initialState;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const actions = {\r\n    toggleToolbar: () => ({ type: types.TOGGLE_TOOLBAR }),\r\n    toggleBacklog: () => ({ type: types.TOGGLE_BACKLOG }),\r\n    restoreInitialState: () => ({ type: types.RESTORE_INITIAL_STATE }),\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { AnchorButton, Button, Intent, Navbar } from '@blueprintjs/core';\r\n\r\nimport { actions as userActions } from '../redux/modules/user';\r\nimport { actions as listsActions } from '../redux/modules/lists';\r\nimport { actions as uiActions } from '../redux/modules/ui';\r\nimport { Alignment } from \"@blueprintjs/core/lib/cjs/common/alignment\";\r\n\r\nclass Header extends React.Component {\r\n    render() {\r\n        const { user, fetching, logout, fetchLists, toggleToolbar } = this.props;\r\n\r\n        const { loggedIn, token } = user;\r\n\r\n        const logoutButton = (\r\n            <AnchorButton\r\n                text=\"Logout\"\r\n                icon=\"log-out\"\r\n                onClick={() => {\r\n                    logout();\r\n                    this.props.history.push('/');\r\n                }}\r\n                intent={Intent.PRIMARY}\r\n            />\r\n        );\r\n\r\n        const backlogButton = (\r\n            <AnchorButton\r\n                text=\"Backlog\"\r\n                icon=\"comparison\"\r\n                onClick={this.props.toggleBacklog}\r\n                intent={Intent.PRIMARY}\r\n            />\r\n        );\r\n\r\n        const syncButton = (\r\n            <AnchorButton\r\n                loading={fetching}\r\n                icon=\"refresh\"\r\n                onClick={() => fetchLists(token)}\r\n                intent={Intent.WARNING}\r\n            />\r\n        );\r\n\r\n        const loginButton = (\r\n            <Link to=\"/board\">\r\n                <Button text=\"Login\" icon=\"log-in\" intent={Intent.PRIMARY}/>\r\n            </Link>\r\n        );\r\n\r\n        const toggleToolbarButton = (\r\n            <AnchorButton text=\"Filters\" icon=\"filter-list\" intent={Intent.PRIMARY} onClick={toggleToolbar}/>\r\n        );\r\n\r\n        const atBoard = this.props.history.location.pathname === '/board';\r\n        const showBoardButtons = atBoard && loggedIn;\r\n        const boardButton = <Button minimal={true} icon=\"control\" text=\"Board\" />;\r\n\r\n        return (\r\n            <Navbar className=\"Header\">\r\n                <Navbar.Group align={Alignment.LEFT}>\r\n                    <Navbar.Heading className=\"font-roboto\"><Link to=\"/\">Kanbanist</Link></Navbar.Heading>\r\n                    <Navbar.Divider />\r\n                    {atBoard ? boardButton : <Link to={'/board'}>{boardButton}</Link>}\r\n                </Navbar.Group>\r\n                <Navbar.Group align={Alignment.RIGHT} className=\"hide-if-small-500\">\r\n                    {showBoardButtons ? syncButton : null}\r\n                    {showBoardButtons ? backlogButton : null}\r\n                    {showBoardButtons ? toggleToolbarButton : null}\r\n                    {loggedIn ? logoutButton : loginButton}\r\n                </Navbar.Group>\r\n            </Navbar>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        fetching: state.lists.fetching,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        logout: () => {\r\n            dispatch(listsActions.clearAll());\r\n            dispatch(uiActions.restoreInitialState());\r\n            dispatch(userActions.logout());\r\n        },\r\n\r\n        fetchLists: token => {\r\n            dispatch(listsActions.fetchLists(token));\r\n        },\r\n\r\n        toggleToolbar: () => {\r\n            dispatch(uiActions.toggleToolbar());\r\n        },\r\n        toggleBacklog: () => {\r\n            dispatch(uiActions.toggleBacklog());\r\n        },\r\n    };\r\n};\r\n\r\nexport default withRouter(\r\n    connect(\r\n        mapStateToProps,\r\n        mapDispatchToProps\r\n    )(Header)\r\n);\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Icon, Position, Tooltip } from '@blueprintjs/core';\r\n\r\nexport default class Footer extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <nav className=\"Footer bp3-navbar bp3-dark\">\r\n                    <div className=\"bp3-navbar-group bp3-align-left\">\r\n                        <a href=\"https://github.com/mwakerman/kanbanist\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                            <button className=\"bp3-button bp3-minimal bp3-icon-code\" />\r\n                        </a>\r\n                        <span className=\"bp3-navbar-divider hide-if-small-750\" />\r\n                        <Tooltip content={\"Support Kanbanist\"} on=\"hover\" position={Position.RIGHT}>\r\n                            <a href=\"https://www.buymeacoffee.com/RUZ5hab\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                <button className=\"bp3-button bp3-minimal bp3-icon-dollar\" />\r\n                            </a>\r\n                        </Tooltip>\r\n                    </div>\r\n                    <div className=\"bp3-navbar-group bp3-align-right\">\r\n                        <Link to=\"/issues\" className=\"hide-if-small-750\">\r\n                            <button className=\"bp3-button bp3-minimal bp3-icon-application\">Known Issues</button>\r\n                        </Link>\r\n\r\n                        <a\r\n                            href=\"https://github.com/mwakerman/kanbanist/issues\"\r\n                            target=\"_blank\"\r\n                            rel=\"noopener noreferrer\">\r\n                            <button className=\"bp3-button bp3-minimal bp3-icon-error hide-if-small-750\">\r\n                                Bugs & Feature Requests\r\n                            </button>\r\n                        </a>\r\n\r\n                        <span className=\"bp3-navbar-divider hide-if-small-750\" />\r\n                        <Tooltip content={`v.${process.env.REACT_APP_VERSION}`} position={Position.LEFT} on=\"hover\">\r\n                            <Icon icon=\"info-sign\" />\r\n                        </Tooltip>\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nexport default () => (\r\n    <div className=\"page\">\r\n        <div className=\"page-content Issues\">\r\n            <h2>Known Issues</h2>\r\n            <p>\r\n                This page lists known issues with Kanbanist, please read before sending a Bug or Feature Request email.\r\n            </p>\r\n            <hr />\r\n            <h4>ISSUE 01: Ordering items within a list.</h4>\r\n            <p>\r\n                The Todoist API does not current allow for custom ordering of items within labels (as it does for\r\n                projects). I submitted a feature request with Todoist and got the following response:{' '}\r\n                <em>\r\n                    \"We might look at doing something about that later, but currently we don't have the resources\r\n                    unfortunately, sorry about that.\"\r\n                </em>\r\n                .\r\n            </p>\r\n            <h4>ISSUE 04: General support for Todoist Filters</h4>\r\n            <p>\r\n                I've received a number of requests for supporting Todoist Filters in various ways. Most commonly to\r\n                allow a filter to be applied to the entire board. I contacted Todoist support to ask about the endpoint\r\n                and they responded that the Todoist Filters API endpoint is not currently working (which is why it's\r\n                been removed from the developer documentation) but they will notify when/if it is fixed. Currently\r\n                Todoist Filters are applied by each application client rather than the server which would be a huge\r\n                amount of work to support in Kanbanist.\r\n            </p>\r\n        </div>\r\n    </div>\r\n);\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Intent } from '@blueprintjs/core';\r\n\r\nimport kanbanistImg from './kanbanist.png';\r\n\r\nexport default () => (\r\n    <div className=\"page\">\r\n        <div className=\"page-content Home\">\r\n            <h2>Welcome to Kanbanist</h2>\r\n            <p>\r\n                <em>The missing Kanban board for Todoist</em>\r\n            </p>\r\n            <hr />\r\n            <img src={kanbanistImg} alt=\"screenshot\" style={{ width: '100%' }} />\r\n            <ul className=\"home-paragraph\" style={{ lineHeight: '1.6em', listStyle: 'none' }}>\r\n                <li>\r\n                    <span role=\"img\" aria-label=\"filter\">\r\n                        🛠\r\n                    </span>{' '}\r\n                    Use filters to craft the perfect board\r\n                </li>\r\n                <li>\r\n                    <span role=\"img\" aria-label=\"bookmark\">\r\n                        📖\r\n                    </span>{' '}\r\n                    Bookmark your favourite boards\r\n                </li>\r\n                <li>\r\n                    <span role=\"img\" aria-label=\"quick add\">\r\n                        ⚡️\r\n                    </span>{' '}\r\n                    Use quick-add syntax to create tasks in #projects, with due dates and (p)riorities\r\n                </li>\r\n                <li>\r\n                    <span role=\"img\" aria-label=\"privacy\">\r\n                        🔐\r\n                    </span>{' '}\r\n                    Kanbanist talks only to Todoist, so your tasks stay completely <strong>private</strong>\r\n                </li>\r\n                <li>\r\n                    <span role=\"img\" aria-label=\"open source\">\r\n                        🙌\r\n                    </span>{' '}\r\n                    Open Source: checkout the{' '}\r\n                    <a href=\"https://github.com/mwakerman/kanbanist\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        project on github\r\n                    </a>\r\n                    .\r\n                </li>\r\n            </ul>\r\n            <p style={{ width: '100%', margin: '20px auto', textAlign: 'center' }}>\r\n                <Link className=\"Home-Button\" to=\"/board\">\r\n                    <Button className=\" bp3-large\" intent={Intent.SUCCESS} text=\"Get Started\" />\r\n                </Link>\r\n                <Link className=\"Home-Button\" to=\"/demo\">\r\n                    <Button className=\"bp3-large\" intent={Intent.WARNING} text=\"Demo Video\" />\r\n                </Link>\r\n            </p>\r\n        </div>\r\n    </div>\r\n);\r\n","import React from 'react';\r\n\r\nexport default () => {\r\n    return (\r\n        <div className=\"page\">\r\n            <div className=\"page-content Home\">\r\n                <h2>Kanbanist Demo Video</h2>\r\n                <hr />\r\n                <div className=\"video-wrapper\">\r\n                    <iframe\r\n                        title=\"kanbanist demo\"\r\n                        width=\"560\"\r\n                        height=\"315\"\r\n                        src=\"https://www.youtube.com/embed/Y5rbyNZuFBQ\"\r\n                        frameBorder=\"0\"\r\n                        allowFullScreen\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\n\r\nexport default () => (\r\n    <div className=\"page\">\r\n        <div className=\"page-content Donate\">\r\n            <h2 className=\"font-roboto\">Thanks!</h2>\r\n            <hr />\r\n            <p>\r\n                I used Todoist and wanted something like Trello's Kanban UI to manage and track my tasks and had given\r\n                up on Todoist releasing <a href=\"https://blog.todoist.com/2016/02/04/boards-todoist-kanban/\">Boards</a>\r\n                &nbsp; for a platform other than Windows 10. And so <strike>\r\n                    Todollo\r\n                </strike> <strike>Trelloist</strike> Kanbanist was born. I hope it's something that you find useful too\r\n                and feel free to send through any &nbsp;\r\n                <a href=\"mailto:m.wakerman+trelloistbug@gmail.com?subject=I%20found%20a%20bug%20with%20Trelloist\">\r\n                    bug reports\r\n                </a>{' '}\r\n                or &nbsp;\r\n                <a href=\"mailto:m.wakerman+trelloistfeature@gmail.com?subject=A%20feature%20request%20for%20Trelloist\">\r\n                    feature requests\r\n                </a>\r\n                .\r\n            </p>\r\n            <hr />\r\n            <h6>PayPal</h6>\r\n            <p>\r\n                <form action=\"https://www.paypal.com/cgi-bin/webscr\" method=\"post\" target=\"_top\">\r\n                    <input type=\"hidden\" name=\"cmd\" value=\"_s-xclick\" />\r\n                    <input\r\n                        type=\"hidden\"\r\n                        name=\"encrypted\"\r\n                        value=\"-----BEGIN PKCS7-----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-----END PKCS7-----\"\r\n                    />\r\n                    <input\r\n                        type=\"image\"\r\n                        src=\"https://www.paypalobjects.com/en_AU/i/btn/btn_donate_LG.gif\"\r\n                        name=\"submit\"\r\n                        alt=\"PayPal – The safer, easier way to pay online!\"\r\n                    />\r\n                    <img alt=\"\" src=\"https://www.paypalobjects.com/en_AU/i/scr/pixel.gif\" width=\"1\" height=\"1\" />\r\n                </form>\r\n            </p>\r\n            <hr />\r\n            <h6>Other ways to support Trelloist</h6>\r\n            <ul>\r\n                <li>\r\n                    <a\r\n                        href=\"https://twitter.com/home?status=Checkout Trelloist: a kanban board for Todoist https://trelloist.com\"\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\">\r\n                        Tweet support!\r\n                    </a>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n);\r\n","import React from 'react';\r\nimport { Route, Switch, Link } from 'react-router-dom';\r\nimport { ConnectedRouter as Router } from 'connected-react-router'\r\nimport ReactGA from 'react-ga';\r\nimport { FocusStyleManager } from '@blueprintjs/core';\r\n\r\nimport Board from './components/Board';\r\nimport Header from './containers/Header';\r\nimport Footer from './containers/Footer';\r\n\r\nimport './App.css';\r\nimport '@blueprintjs/icons/lib/css/blueprint-icons.css';\r\nimport '@blueprintjs/core/lib/css/blueprint.css';\r\nimport '@blueprintjs/datetime/lib/css/blueprint-datetime.css';\r\n\r\n// Pages\r\nimport Issues from './pages/Issues';\r\nimport Home from './pages/Home';\r\nimport Demo from './pages/Demo';\r\nimport Donate from './pages/Donate';\r\n\r\n// Google Analytics\r\nReactGA.initialize('UA-5257385-6', {\r\n    debug: false,\r\n    titleCase: false,\r\n});\r\n\r\n// Control focus outline visibility.\r\nFocusStyleManager.onlyShowFocusOnTabs();\r\n\r\nclass App extends React.Component {\r\n    handleLocationChange = ({ pathname }) => {\r\n        ReactGA.set({ page: pathname });\r\n        ReactGA.pageview(pathname);\r\n    };\r\n\r\n    componentWillMount() {\r\n        const { history } = this.props;\r\n        this.unsubscribeFromHistory = history.listen(this.handleLocationChange);\r\n        this.handleLocationChange(history.location);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.unsubscribeFromHistory) this.unsubscribeFromHistory();\r\n    }\r\n\r\n    render() {\r\n        const { actions, history } = this.props;\r\n        return (\r\n            <Router history={history}>\r\n                <div className=\"App\">\r\n                    <Header history={history} />\r\n                    <div className=\"main-content\">\r\n                        <Switch>\r\n                            {/* note: add new paths to netlify/_redirects */}\r\n                            <Route exact={true} path=\"/\" component={Home} />\r\n                            <Route path=\"/board\" component={props => <Board actions={actions} {...props} />} />\r\n                            <Route path=\"/issues\" component={Issues} />\r\n                            <Route path=\"/demo\" component={Demo} />\r\n                            <Route path=\"/donate\" component={Donate} />\r\n\r\n                            {/* Catch-all => 404 */}\r\n                            <Route\r\n                                component={() => (\r\n                                    <div>\r\n                                        <h1>404 Not Found</h1>\r\n                                        <Link to=\"/\">Home</Link>\r\n                                    </div>\r\n                                )}\r\n                            />\r\n                        </Switch>\r\n                    </div>\r\n                    <Footer />\r\n                </div>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport App from './App';\r\n\r\nexport const Root = ({ store, actions, history }) => {\r\n    return (\r\n        <Provider store={store}>\r\n            <App actions={actions} history={history} />\r\n        </Provider>\r\n    );\r\n};\r\n\r\nexport default Root;\r\n","import * as Immutable from 'immutable';\r\nimport moment from 'moment';\r\nimport List from '../core/List';\r\nimport Item from '../core/Item';\r\nimport Project from '../core/Project';\r\nimport { priorities as Priorities } from '../core/Priority';\r\nimport { NAMED_FILTERS } from '../redux/modules/lists';\r\nexport { save } from 'redux-localstorage-simple';\r\n\r\n// Constants\r\nconst TRELLOIST_VERSION_NAMESPACE = 'TRELLOIST_VERSION';\r\nconst VERSION = '9';\r\nexport const LOCAL_STORAGE_NAMESPACE = 'trelloist';\r\n\r\n// http://stackoverflow.com/a/901144/4988358\r\nfunction getParameterByName(name) {\r\n    const url = window.location.href;\r\n    // eslint-disable-next-line\r\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\r\n    const regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)');\r\n    const results = regex.exec(url);\r\n    if (!results) return null;\r\n    if (!results[2]) return '';\r\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\r\n}\r\n\r\n// Deserializes the initial state from localStorage.\r\nexport function load() {\r\n    const loadedState = {};\r\n    if (localStorage[LOCAL_STORAGE_NAMESPACE]) {\r\n        const jsState = JSON.parse(localStorage[LOCAL_STORAGE_NAMESPACE]);\r\n\r\n        // Versioning - by bumping the version number I can force a clean load when someone visits the site.\r\n        // TODO: maintain the user so another login isn't required.\r\n        const localVersion = localStorage[TRELLOIST_VERSION_NAMESPACE];\r\n        if (!localVersion || localVersion !== VERSION) {\r\n            console.warn('Version bump, clearing localStorage...');\r\n            localStorage.clear();\r\n            localStorage[TRELLOIST_VERSION_NAMESPACE] = VERSION;\r\n            return {};\r\n        }\r\n\r\n        // User\r\n        loadedState.user = jsState.user;\r\n\r\n        // Lists\r\n        loadedState.lists = {};\r\n        loadedState.lists.lists = Immutable.List(\r\n            jsState.lists.lists.map(listObject => {\r\n                const listItems = listObject.items.map(itemObj => new Item(itemObj));\r\n                return new List({\r\n                    id: listObject.id,\r\n                    title: listObject.title,\r\n                    items: Immutable.List(listItems),\r\n                });\r\n            })\r\n        );\r\n\r\n        const backlogItems = jsState.lists.backlog.items.map(itemObj => new Item(itemObj));\r\n        loadedState.lists.backlog = new List({\r\n            id: 0,\r\n            title: 'Backlog',\r\n            items: Immutable.List(backlogItems),\r\n        });\r\n\r\n        // Projects\r\n        loadedState.lists.projects = Immutable.List(jsState.lists.projects.map(project => new Project(project)));\r\n\r\n        // Filters\r\n        let filteredListIds = Immutable.List(jsState.lists.filteredLists.map(el => el.id));\r\n        let filteredProjectIds = Immutable.List(jsState.lists.filteredProjects.map(project => project.id));\r\n        let filteredPriorities = Priorities.filter(p => jsState.lists.filteredPriorities.indexOf(p.id) >= 0);\r\n\r\n        loadedState.lists.filterDueDate = Immutable.Map({\r\n            startDate: jsState.lists.filterDueDate.startDate ? moment(jsState.lists.filterDueDate.startDate) : null,\r\n            endDate: jsState.lists.filterDueDate.endDate ? moment(jsState.lists.filterDueDate.endDate) : null,\r\n        });\r\n\r\n        let showIfResponsible = jsState.lists.showIfResponsible || false;\r\n        let namedFilter = NAMED_FILTERS[jsState.lists.namedFilter] || null;\r\n\r\n        loadedState.lists.sortBy = new Immutable.Map({\r\n            field: jsState.lists.sortBy.field,\r\n            direction: jsState.lists.sortBy.direction,\r\n        });\r\n\r\n        // Filter from URL overrides redux state\r\n\r\n        // Build map from query string to objects\r\n        const { lists, projects, priorities, start, end, assigned, filter } = Immutable.List([\r\n            'lists',\r\n            'projects',\r\n            'priorities',\r\n            'start',\r\n            'end',\r\n            'assigned',\r\n            'filter',\r\n        ]).reduce((params, param) => {\r\n            const value = getParameterByName(param);\r\n\r\n            // filters are non-JSON strings and can't be JSON.parse'd\r\n            if (param === 'filter' && value) {\r\n                params[param] = value;\r\n            } else if (value) {\r\n                params[param] = JSON.parse(value);\r\n            }\r\n            return params;\r\n        }, {});\r\n\r\n        // we always treat the URL as the store of filtering state (this allows the filters to be unset by visiting a clean URL)\r\n\r\n        // lists\r\n        filteredListIds = lists\r\n            ? loadedState.lists.lists.filter(el => lists.indexOf(el.title) < 0).map(el => el.id)\r\n            : Immutable.List.of();\r\n\r\n        filteredProjectIds = projects\r\n            ? loadedState.lists.projects.filter(el => projects.indexOf(el.name) < 0).map(el => el.id)\r\n            : Immutable.List.of();\r\n\r\n        filteredPriorities = priorities\r\n            ? Priorities.filter(el => priorities.indexOf(el.id) < 0)\r\n            : Immutable.List.of();\r\n\r\n        // due date\r\n        loadedState.lists.filterDueDate = Immutable.Map({\r\n            startDate: start ? moment(start) : null,\r\n            endDate: end ? moment(end) : null,\r\n        });\r\n\r\n        // assigned\r\n        showIfResponsible = assigned;\r\n\r\n        // named\r\n        namedFilter = filter ? NAMED_FILTERS[filter] : null;\r\n\r\n        loadedState.lists.filteredLists = loadedState.lists.lists.filter(list => filteredListIds.contains(list.id));\r\n        loadedState.lists.filteredProjects = loadedState.lists.projects.filter(project =>\r\n            filteredProjectIds.contains(project.id)\r\n        );\r\n        loadedState.lists.defaultProjectId = jsState.lists.defaultProjectId;\r\n        loadedState.lists.filteredPriorities = filteredPriorities;\r\n        loadedState.lists.showIfResponsible = showIfResponsible;\r\n        loadedState.lists.namedFilter = namedFilter;\r\n\r\n        loadedState.lists.collaborators = jsState.lists.collaborators;\r\n\r\n        // ui\r\n        loadedState.ui = jsState.ui;\r\n    }\r\n\r\n    return loadedState;\r\n}\r\n","import Todoist from '../../todoist-client/Todoist';\r\nimport { types, actions, isListBacklog, isBacklogListId } from '../modules/lists';\r\nimport List from '../../core/List';\r\nimport Item from \"../../core/Item\";\r\nimport moment from 'moment';\r\n\r\nconst todoistPersistenceMiddleware = store => next => action => {\r\n    const state = store.getState();\r\n    const token = state.user.user.token;\r\n    const project_id = state.lists.defaultProjectId;\r\n    const projects = state.lists.projects;\r\n    const defaultProject = projects.find(p => p.id === project_id);\r\n\r\n    switch (action.type) {\r\n        case types.ADD_LIST_ITEM:\r\n            function persistAddListItem() {\r\n                const { list, item } = action.payload;\r\n                const { content, temp_id } = item;\r\n\r\n                const labelString = isListBacklog(list) ? '' : `@${list.title.replaceAll(' ', '_').toLowerCase()}`;\r\n                const hasProjectSyntax = content.indexOf('#') >= 0;\r\n                const projectString =\r\n                    hasProjectSyntax || !defaultProject ? '' : `#${defaultProject.name.replaceAll(' ', '')}`;\r\n\r\n                Todoist.quickAddItem(token, `${content} ${labelString} ${projectString}`, temp_id)\r\n                    .then(({ id: itemId }) => store.dispatch(actions.updateId(Item, temp_id, `${itemId}`)))\r\n                    .then(() => store.dispatch(actions.fetchLists()))\r\n                    .catch(err => console.error('could not add item', err));\r\n            }\r\n            persistAddListItem();\r\n            break;\r\n\r\n        case types.COMPLETE_LIST:\r\n            function persistCompleteList() {\r\n                const { list } = action.payload;\r\n                const itemIds = list.items.map(item => item.id);\r\n                Todoist.completeListItems(token, itemIds);\r\n            }\r\n            persistCompleteList();\r\n            break;\r\n\r\n        case types.DELETE_LIST:\r\n            function deleteList() {\r\n                const { list } = action.payload;\r\n                // Note: remove todoist label (deleting label does not appear to remove from items)\r\n                list.items.forEach(item => Todoist.updateItem(token, { id: item.id, labels: [] })); // TODO\r\n                if (!isListBacklog(list)) {\r\n                    Todoist.deleteLabel(token, list.id);\r\n                }\r\n            }\r\n            deleteList();\r\n            break;\r\n\r\n        case types.COMPLETE_LIST_ITEM:\r\n            function persistCompleteListItem() {\r\n                const { item } = action.payload;\r\n                Todoist.completeListItem(token, item.id);\r\n            }\r\n            persistCompleteListItem();\r\n            break;\r\n\r\n        case types.UPDATE_LIST_ITEM:\r\n            function persistContentChange() {\r\n                const { item, fields } = action.payload;\r\n                const update = { id: item.id };\r\n                const { text: content, due } = fields;\r\n                if (content) {\r\n                    update.content = content;\r\n                }\r\n                if (due && due.date) {\r\n                    update.due = due;\r\n                } else if (due && due.date === null) {\r\n                    update.due = null;\r\n                }\r\n                Todoist.updateItem(token, update);\r\n            }\r\n            persistContentChange();\r\n            break;\r\n\r\n        case types.ADD_NEW_LIST:\r\n            function persistAddLabel() {\r\n                const { name, temp_id } = action.payload;\r\n\r\n                // TODO: un-duplicated in lists module\r\n                // prevent multiple lists from having the same name\r\n                let title = name;\r\n                let titleAlreadyUsed = state.lists.lists.map(list => list.title).contains(title);\r\n                while (titleAlreadyUsed) {\r\n                    title = title + ' 2';\r\n                    titleAlreadyUsed = state.lists.lists.map(list => list.title).contains(title);\r\n                }\r\n\r\n                const newLabel = { name: title, item_order: state.lists.lists.size + 1 };\r\n                Todoist.addLabel(token, newLabel, temp_id).then(response => {\r\n                    store.dispatch({\r\n                        type: types.UPDATE_ID,\r\n                        payload: {\r\n                            type: List,\r\n                            old_id: temp_id,\r\n                            new_id: response.temp_id_mapping[temp_id],\r\n                        },\r\n                    });\r\n                });\r\n            }\r\n            persistAddLabel();\r\n            break;\r\n\r\n        case types.RENAME_LIST:\r\n            function persistLabelRename() {\r\n                const { list, newListName } = action.payload;\r\n\r\n                // prevent multiple lists from having the same name\r\n                let title = newListName;\r\n                let titleAlreadyUsed = state.lists.lists.map(list => list.title).contains(title);\r\n                while (titleAlreadyUsed) {\r\n                    title = title + ' 2';\r\n                    titleAlreadyUsed = state.lists.lists.map(list => list.title).contains(title);\r\n                }\r\n\r\n                if (!isListBacklog(list)) {\r\n                    Todoist.updateLabelName(token, list.id, title);\r\n                }\r\n            }\r\n            persistLabelRename();\r\n            break;\r\n\r\n        case types.MOVE_ITEM: {\r\n            console.log(\"Move called\");\r\n            const { itemId, fromListId, toListId } = action.payload;\r\n\r\n            if (fromListId === toListId) {\r\n                break;\r\n            }\r\n\r\n            const fromList = state.lists.lists.push(state.lists.backlog).find(l => l.id === fromListId);\r\n            const toList = state.lists.lists.push(state.lists.backlog).find(l => l.id === toListId);\r\n            const item = fromList.get('items').find(i => i.id === itemId);\r\n\r\n            // get all labels for item\r\n            const labels = state.lists.lists\r\n                .filter(l => l.items.map(i => i.id).includes(itemId))\r\n                .map(l => l.id)\r\n                .concat(isListBacklog(toList) ? [] : [toListId])\r\n                .filter(listId => !isBacklogListId(listId) && listId !== fromListId)\r\n                .toSet().toArray();\r\n\r\n            console.log(labels);\r\n\r\n            // TODO(pbozzay): Check to see if this is a date ID. Find the new date that this item should have.\r\n            //const updatedItem = { id: item.id, labels };\r\n\r\n            // TODO: Do this in MST or users timezone from browser.\r\n            const dueDate = moment(toListId);\r\n            const daysFromNow = dueDate.diff(new Date(), 'days')\r\n            const updatedItem = { id: item.id, due: {\r\n                 date: dueDate.format(\"YYYY-MM-DD\"),\r\n                 string: \"in \" + daysFromNow + \" days\",\r\n                 recurring: false,\r\n                }};\r\n            console.log(\"====\");\r\n            console.log(updatedItem);\r\n\r\n            Todoist.updateItem(token, updatedItem);\r\n            break;\r\n        }\r\n        case types.UPDATE_LIST_INDEX: {\r\n            const { listId, newIndex } = action.payload;\r\n            const { lists } = state.lists;\r\n\r\n            const list = lists.find(l => l.id === listId);\r\n            const labelOrderMap = lists\r\n                .filter(el => el.id !== listId)\r\n                .insert(newIndex, list)\r\n                .map(l => l.id)\r\n                .reduce((acc, lid, idx) => Object.assign(acc, { [lid]: idx }), {});\r\n\r\n            Todoist.updateLabelOrder(token, labelOrderMap);\r\n            break;\r\n        }\r\n        default:\r\n            // Nothing.\r\n    }\r\n\r\n    // Fire next action.\r\n    next(action);\r\n};\r\n\r\nexport default todoistPersistenceMiddleware;\r\n","import { applyMiddleware, bindActionCreators, combineReducers, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport createLogger from 'redux-logger';\r\nimport Raven from 'raven-js';\r\n\r\nimport { load, save, LOCAL_STORAGE_NAMESPACE } from './localStoragePersistence';\r\n\r\nimport { connectRouter, routerMiddleware } from 'connected-react-router';\r\nimport { createBrowserHistory } from 'history';\r\n\r\n// Redux modules.\r\nimport * as lists from './modules/lists';\r\nimport * as user from './modules/user';\r\nimport * as ui from './modules/ui';\r\n\r\n// Middleware\r\nimport todoistPersistenceMiddleware from './middleware/todoist-persistence';\r\nimport trelloistFilterUrlMiddleware from './middleware/trelloist-filter-url';\r\nconst emptyMiddleware = store => next => action => next(action);\r\n\r\nconst sentryMiddleware = store => next => action => {\r\n    switch (action.type) {\r\n        case user.types.LOGIN: {\r\n            const user = action.payload;\r\n            Raven.setUserContext({\r\n                userId: user.id,\r\n                userTz: user.tz_info.timezone,\r\n                premium: user.is_premium,\r\n            });\r\n            break;\r\n        }\r\n        default:\r\n        // no-op\r\n    }\r\n    next(action);\r\n};\r\n\r\nexport const configureStore = () => {\r\n    const history = createBrowserHistory();\r\n\r\n    const reducer = combineReducers({\r\n        router: connectRouter(history),\r\n        lists: lists.reducer,\r\n        user: user.reducer,\r\n        ui: ui.reducer,\r\n    });\r\n\r\n    const logger = process.env.NODE_ENV === 'development' ? createLogger({ collapsed: true }) : emptyMiddleware;\r\n\r\n\r\n    const middleware = applyMiddleware(\r\n        logger,\r\n        sentryMiddleware,\r\n        todoistPersistenceMiddleware,\r\n        save({ namespace: LOCAL_STORAGE_NAMESPACE }),\r\n        thunk,\r\n        routerMiddleware(history),\r\n        trelloistFilterUrlMiddleware\r\n    );\r\n\r\n    // If we change the localStorage schema, loading will fail. So if we can't load\r\n    // then we don't and the next store save will overwrite.\r\n    let initialState = {};\r\n    try {\r\n        initialState = load();\r\n    } catch (ex) {\r\n        console.error('Could not load initialState from localStorage.', ex);\r\n        localStorage.clear();\r\n    }\r\n\r\n    const store = createStore(reducer, initialState, middleware);\r\n\r\n    const actions = {\r\n        lists: bindActionCreators(lists.actions, store.dispatch),\r\n        user: bindActionCreators(user.actions, store.dispatch),\r\n        ui: bindActionCreators(ui.actions, store.dispatch),\r\n    };\r\n    return { store, actions, history };\r\n};\r\n\r\nexport default configureStore;\r\n","// http://redux.js.org/docs/advanced/AsyncActions.html#note-on-fetch\r\n// Ensure Promise polyfill is present.\r\nimport \"core-js\";\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Raven from 'raven-js';\r\n\r\nimport Root from './Root';\r\nimport './index.css';\r\nimport configureStore from './redux/configureStore';\r\n\r\n// Add hashcode method - See ListItem's `id` prop.\r\n// eslint-disable-next-line\r\nString.prototype.hashCode = function() {\r\n    var hash = 0,\r\n        i,\r\n        chr,\r\n        len;\r\n    if (this.length === 0) return hash;\r\n    for (i = 0, len = this.length; i < len; i++) {\r\n        chr = this.charCodeAt(i);\r\n        hash = (hash << 5) - hash + chr;\r\n        hash |= 0; // Convert to 32bit integer\r\n    }\r\n    return hash;\r\n};\r\n\r\n// http://stackoverflow.com/a/1144788/4988358\r\nwindow.escapeRegExp = str => {\r\n    // eslint-disable-next-line\r\n    return str.replace(/([.*+?^=!:${}()|\\[\\]\\/\\\\])/g, '\\\\$1');\r\n};\r\n\r\n// eslint-disable-next-line\r\nString.prototype.replaceAll = function(search, replacement) {\r\n    var target = this;\r\n    return target.replace(new RegExp(window.escapeRegExp(search), 'g'), replacement);\r\n};\r\n\r\nwindow.generateUUID = () => {\r\n    var d = new Date().getTime();\r\n    if (window.performance && typeof window.performance.now === 'function') {\r\n        d += performance.now();\r\n    }\r\n    var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\r\n        var r = ((d + Math.random() * 16) % 16) | 0;\r\n        d = Math.floor(d / 16);\r\n        // eslint-disable-next-line\r\n        return (c == 'x' ? r : (r & 0x3) | 0x8).toString(16);\r\n    });\r\n    return uuid;\r\n};\r\n\r\n// configure sentry\r\nif (process.env.NODE_ENV !== 'development') {\r\n    Raven.config('https://4e4d1ac0c746404c90f4b0248a554a39@sentry.io/237417', {\r\n        release: process.env.REACT_APP_VERSION,\r\n    }).install();\r\n} else {\r\n    console.debug('Sentry not initialised, in development mode');\r\n}\r\n\r\nconst { store, actions, history } = configureStore();\r\n\r\nReactDOM.render(<Root store={store} actions={actions} history={history} />, document.getElementById('root'));\r\n"],"sourceRoot":""}